//@version=6
//@143gojo --- dm me if you have questions or bug fixes (i probably won't fix them but you can try)
indicator("VWAP Dashboard (40)", overlay=true)

// ----------------------------------------------------
// user inputs 
// ----------------------------------------------------

// table position
var string gp2 = "display"
string table_y_pos = input.string("top", "vertical position", options=["top", "middle", "bottom"], group=gp2)
string table_x_pos = input.string("right", "horizontal position", options=["left", "center", "right"], group=gp2)
var table dashboard = table.new(table_y_pos + "_" + table_x_pos, 7, 41, border_width=1)
color_positive = input.color(color.green, "Positive Color")
color_negative = input.color(color.red, "Negative Color")
color_neutral = input.color(color.gray, "Neutral Color")
color_text = input.color(color.white, "Text Color")
color_header_bg = input.color(color.rgb(39, 39, 39), "Header Background")

// adjustable params
var string gp3 = "weights"
y_weight    = input.float(1.0, "Yearly Weight", tooltip="higher value = higher impact on trend score by the yearly VWAP/VAH/VAL", group=gp3)
q_weight    = input.float(1.0, "Quarterly Weight", tooltip="higher value = higher impact on trend score by the quarterly VWAP/VAH/VAL", group=gp3)
m_weight    = input.float(1.0, "Monthly Weight", tooltip="higher value = higher impact on trend score by the monthly VWAP/VAH/VAL", group=gp3)
w_weight    = input.float(1.0, "Weekly Weight", tooltip="higher value = higher impact on trend score by the weekly VWAP/VAH/VAL", group=gp3)
std_weight  = input.float(1.0, "Current VAH/VAL Weight", tooltip="bonus/penalty for price being above/below the current VAH/VAL", group=gp3)
prev_weight = input.float(1.0, "Previous VAH/VAL Weight", tooltip="bonus/penalty for price being above/below the previous VWAP/VAH/VAL", group=gp3)

// number of symbols to display
var string gp4 = "symbols"
maxSymbolsToShow = input.int(defval=5, title="number of symbols to display (2-40)", minval=2, maxval=40, tooltip="the table will take a while to load initially, pinescript sucks sorry bros.", group=gp4)

// up to 10 symbol inputs, default all to btc
s01 = input.symbol("BINANCE:BTCUSDT.P", "symbol 1")
s02 = input.symbol("BINANCE:BTCUSDT.P", "symbol 2")
s03 = input.symbol("BINANCE:BTCUSDT.P", "symbol 3")
s04 = input.symbol("BINANCE:BTCUSDT.P", "symbol 4")
s05 = input.symbol("BINANCE:BTCUSDT.P", "symbol 5")
s06 = input.symbol("BINANCE:BTCUSDT.P", "symbol 6")
s07 = input.symbol("BINANCE:BTCUSDT.P", "symbol 7")
s08 = input.symbol("BINANCE:BTCUSDT.P", "symbol 8")
s09 = input.symbol("BINANCE:BTCUSDT.P", "symbol 9")
s10 = input.symbol("BINANCE:BTCUSDT.P", "symbol 10")
s11 = input.symbol("BINANCE:BTCUSDT.P", "symbol 11")
s12 = input.symbol("BINANCE:BTCUSDT.P", "symbol 12")
s13 = input.symbol("BINANCE:BTCUSDT.P", "symbol 13")
s14 = input.symbol("BINANCE:BTCUSDT.P", "symbol 14")
s15 = input.symbol("BINANCE:BTCUSDT.P", "symbol 15")
s16 = input.symbol("BINANCE:BTCUSDT.P", "symbol 16")
s17 = input.symbol("BINANCE:BTCUSDT.P", "symbol 17")
s18 = input.symbol("BINANCE:BTCUSDT.P", "symbol 18")
s19 = input.symbol("BINANCE:BTCUSDT.P", "symbol 19")
s20 = input.symbol("BINANCE:BTCUSDT.P", "symbol 20")
s21 = input.symbol("BINANCE:BTCUSDT.P", "symbol 21")
s22 = input.symbol("BINANCE:BTCUSDT.P", "symbol 22")
s23 = input.symbol("BINANCE:BTCUSDT.P", "symbol 23")
s24 = input.symbol("BINANCE:BTCUSDT.P", "symbol 24")
s25 = input.symbol("BINANCE:BTCUSDT.P", "symbol 25")
s26 = input.symbol("BINANCE:BTCUSDT.P", "symbol 26")
s27 = input.symbol("BINANCE:BTCUSDT.P", "symbol 27")
s28 = input.symbol("BINANCE:BTCUSDT.P", "symbol 28")
s29 = input.symbol("BINANCE:BTCUSDT.P", "symbol 29")
s30 = input.symbol("BINANCE:BTCUSDT.P", "symbol 30")
s31 = input.symbol("BINANCE:BTCUSDT.P", "symbol 31")
s32 = input.symbol("BINANCE:BTCUSDT.P", "symbol 32")
s33 = input.symbol("BINANCE:BTCUSDT.P", "symbol 33")
s34 = input.symbol("BINANCE:BTCUSDT.P", "symbol 34")
s35 = input.symbol("BINANCE:BTCUSDT.P", "symbol 35")
s36 = input.symbol("BINANCE:BTCUSDT.P", "symbol 36")
s37 = input.symbol("BINANCE:BTCUSDT.P", "symbol 37")
s38 = input.symbol("BINANCE:BTCUSDT.P", "symbol 38")
s39 = input.symbol("BINANCE:BTCUSDT.P", "symbol 39")
s40 = input.symbol("BINANCE:BTCUSDT.P", "symbol 40")

// ----------------------------------------------------
// helper funcs
// ----------------------------------------------------

calculate_vwap(tf, prefix, close_val) =>
    t = time(tf)
    start = na(t[1]) or t > t[1]
    pvwap  = float(na)
    pupper = float(na)
    plower = float(na)
    [vwap, upper, lower] = ta.vwap(close_val, start, 1.0)

    if start
        pvwap  := vwap[1]
        pupper := upper[1]
        plower := lower[1]
    else
        pvwap  := pvwap[1]
        pupper := pupper[1]
        plower := plower[1]

    [vwap, upper, lower, pvwap, pupper, plower]

calculate_period_score(price, vwap, vah, val, prev_vwap, prev_vah, prev_val, weight) =>
    float score = 0.0

    if not na(vwap)
        vwap_distance = (price - vwap) / vwap
        score += weight * vwap_distance

        if price > vah
            score += std_weight * weight
        if price < val
            score -= std_weight * weight

    if not na(prev_vwap)
        prev_vwap_distance = (price - prev_vwap) / prev_vwap
        score += weight * prev_weight * prev_vwap_distance

        if price > prev_vah
            score += prev_weight * weight
        if price < prev_val
            score -= prev_weight * weight

    score

get_color_for_value(value) =>
    color bg = na

    if value > 0
        bg := color.new(color_positive, 70)
    else if value < 0
        bg := color.new(color_negative, 70)
    else
        bg := color.new(color_neutral, 90)
        
    bg

// ----------------------------------------------------
// the rest of the script is probably some of the worst
// shit that i've ever had the misfortune of writing.
// it's actualy disgusting, but it works, barely.
// there is no dynamic variable naming in pinescript
// as far as i can tell, so you quite literally have to
// define everything upfront, then only display as much
// as you want to. shit is retarded. gl fixing it lol.
// ----------------------------------------------------

// do the separate security calls for each of the 10
c01 = request.security(s01, timeframe.period, close)
c02 = request.security(s02, timeframe.period, close)
c03 = request.security(s03, timeframe.period, close)
c04 = request.security(s04, timeframe.period, close)
c05 = request.security(s05, timeframe.period, close)
c06 = request.security(s06, timeframe.period, close)
c07 = request.security(s07, timeframe.period, close)
c08 = request.security(s08, timeframe.period, close)
c09 = request.security(s09, timeframe.period, close)
c10 = request.security(s10, timeframe.period, close)
c11 = request.security(s11, timeframe.period, close)
c12 = request.security(s12, timeframe.period, close)
c13 = request.security(s13, timeframe.period, close)
c14 = request.security(s14, timeframe.period, close)
c15 = request.security(s15, timeframe.period, close)
c16 = request.security(s16, timeframe.period, close)
c17 = request.security(s17, timeframe.period, close)
c18 = request.security(s18, timeframe.period, close)
c19 = request.security(s19, timeframe.period, close)
c20 = request.security(s20, timeframe.period, close)
c21 = request.security(s21, timeframe.period, close)
c22 = request.security(s22, timeframe.period, close)
c23 = request.security(s23, timeframe.period, close)
c24 = request.security(s24, timeframe.period, close)
c25 = request.security(s25, timeframe.period, close)
c26 = request.security(s26, timeframe.period, close)
c27 = request.security(s27, timeframe.period, close)
c28 = request.security(s28, timeframe.period, close)
c29 = request.security(s29, timeframe.period, close)
c30 = request.security(s30, timeframe.period, close)
c31 = request.security(s31, timeframe.period, close)
c32 = request.security(s32, timeframe.period, close)
c33 = request.security(s33, timeframe.period, close)
c34 = request.security(s34, timeframe.period, close)
c35 = request.security(s35, timeframe.period, close)
c36 = request.security(s36, timeframe.period, close)
c37 = request.security(s37, timeframe.period, close)
c38 = request.security(s38, timeframe.period, close)
c39 = request.security(s39, timeframe.period, close)
c40 = request.security(s40, timeframe.period, close)

// weekly vwap calcs
[w_vwap01, w_vah01, w_val01, w_prev_vwap01, w_prev_vah01, w_prev_val01] = calculate_vwap("1W", "w", c01)
[w_vwap02, w_vah02, w_val02, w_prev_vwap02, w_prev_vah02, w_prev_val02] = calculate_vwap("1W", "w", c02)
[w_vwap03, w_vah03, w_val03, w_prev_vwap03, w_prev_vah03, w_prev_val03] = calculate_vwap("1W", "w", c03)
[w_vwap04, w_vah04, w_val04, w_prev_vwap04, w_prev_vah04, w_prev_val04] = calculate_vwap("1W", "w", c04)
[w_vwap05, w_vah05, w_val05, w_prev_vwap05, w_prev_vah05, w_prev_val05] = calculate_vwap("1W", "w", c05)
[w_vwap06, w_vah06, w_val06, w_prev_vwap06, w_prev_vah06, w_prev_val06] = calculate_vwap("1W", "w", c06)
[w_vwap07, w_vah07, w_val07, w_prev_vwap07, w_prev_vah07, w_prev_val07] = calculate_vwap("1W", "w", c07)
[w_vwap08, w_vah08, w_val08, w_prev_vwap08, w_prev_vah08, w_prev_val08] = calculate_vwap("1W", "w", c08)
[w_vwap09, w_vah09, w_val09, w_prev_vwap09, w_prev_vah09, w_prev_val09] = calculate_vwap("1W", "w", c09)
[w_vwap10, w_vah10, w_val10, w_prev_vwap10, w_prev_vah10, w_prev_val10] = calculate_vwap("1W", "w", c10)
[w_vwap11, w_vah11, w_val11, w_prev_vwap11, w_prev_vah11, w_prev_val11] = calculate_vwap("1W", "w", c11)
[w_vwap12, w_vah12, w_val12, w_prev_vwap12, w_prev_vah12, w_prev_val12] = calculate_vwap("1W", "w", c12)
[w_vwap13, w_vah13, w_val13, w_prev_vwap13, w_prev_vah13, w_prev_val13] = calculate_vwap("1W", "w", c13)
[w_vwap14, w_vah14, w_val14, w_prev_vwap14, w_prev_vah14, w_prev_val14] = calculate_vwap("1W", "w", c14)
[w_vwap15, w_vah15, w_val15, w_prev_vwap15, w_prev_vah15, w_prev_val15] = calculate_vwap("1W", "w", c15)
[w_vwap16, w_vah16, w_val16, w_prev_vwap16, w_prev_vah16, w_prev_val16] = calculate_vwap("1W", "w", c16)
[w_vwap17, w_vah17, w_val17, w_prev_vwap17, w_prev_vah17, w_prev_val17] = calculate_vwap("1W", "w", c17)
[w_vwap18, w_vah18, w_val18, w_prev_vwap18, w_prev_vah18, w_prev_val18] = calculate_vwap("1W", "w", c18)
[w_vwap19, w_vah19, w_val19, w_prev_vwap19, w_prev_vah19, w_prev_val19] = calculate_vwap("1W", "w", c19)
[w_vwap20, w_vah20, w_val20, w_prev_vwap20, w_prev_vah20, w_prev_val20] = calculate_vwap("1W", "w", c20)
[w_vwap21, w_vah21, w_val21, w_prev_vwap21, w_prev_vah21, w_prev_val21] = calculate_vwap("1W", "w", c21)
[w_vwap22, w_vah22, w_val22, w_prev_vwap22, w_prev_vah22, w_prev_val22] = calculate_vwap("1W", "w", c22)
[w_vwap23, w_vah23, w_val23, w_prev_vwap23, w_prev_vah23, w_prev_val23] = calculate_vwap("1W", "w", c23)
[w_vwap24, w_vah24, w_val24, w_prev_vwap24, w_prev_vah24, w_prev_val24] = calculate_vwap("1W", "w", c24)
[w_vwap25, w_vah25, w_val25, w_prev_vwap25, w_prev_vah25, w_prev_val25] = calculate_vwap("1W", "w", c25)
[w_vwap26, w_vah26, w_val26, w_prev_vwap26, w_prev_vah26, w_prev_val26] = calculate_vwap("1W", "w", c26)
[w_vwap27, w_vah27, w_val27, w_prev_vwap27, w_prev_vah27, w_prev_val27] = calculate_vwap("1W", "w", c27)
[w_vwap28, w_vah28, w_val28, w_prev_vwap28, w_prev_vah28, w_prev_val28] = calculate_vwap("1W", "w", c28)
[w_vwap29, w_vah29, w_val29, w_prev_vwap29, w_prev_vah29, w_prev_val29] = calculate_vwap("1W", "w", c29)
[w_vwap30, w_vah30, w_val30, w_prev_vwap30, w_prev_vah30, w_prev_val30] = calculate_vwap("1W", "w", c30)
[w_vwap31, w_vah31, w_val31, w_prev_vwap31, w_prev_vah31, w_prev_val31] = calculate_vwap("1W", "w", c31)
[w_vwap32, w_vah32, w_val32, w_prev_vwap32, w_prev_vah32, w_prev_val32] = calculate_vwap("1W", "w", c32)
[w_vwap33, w_vah33, w_val33, w_prev_vwap33, w_prev_vah33, w_prev_val33] = calculate_vwap("1W", "w", c33)
[w_vwap34, w_vah34, w_val34, w_prev_vwap34, w_prev_vah34, w_prev_val34] = calculate_vwap("1W", "w", c34)
[w_vwap35, w_vah35, w_val35, w_prev_vwap35, w_prev_vah35, w_prev_val35] = calculate_vwap("1W", "w", c35)
[w_vwap36, w_vah36, w_val36, w_prev_vwap36, w_prev_vah36, w_prev_val36] = calculate_vwap("1W", "w", c36)
[w_vwap37, w_vah37, w_val37, w_prev_vwap37, w_prev_vah37, w_prev_val37] = calculate_vwap("1W", "w", c37)
[w_vwap38, w_vah38, w_val38, w_prev_vwap38, w_prev_vah38, w_prev_val38] = calculate_vwap("1W", "w", c38)
[w_vwap39, w_vah39, w_val39, w_prev_vwap39, w_prev_vah39, w_prev_val39] = calculate_vwap("1W", "w", c39)
[w_vwap40, w_vah40, w_val40, w_prev_vwap40, w_prev_vah40, w_prev_val40] = calculate_vwap("1W", "w", c40)

// monthly vwap calcs
[m_vwap01, m_vah01, m_val01, m_prev_vwap01, m_prev_vah01, m_prev_val01] = calculate_vwap("1M", "m", c01)
[m_vwap02, m_vah02, m_val02, m_prev_vwap02, m_prev_vah02, m_prev_val02] = calculate_vwap("1M", "m", c02)
[m_vwap03, m_vah03, m_val03, m_prev_vwap03, m_prev_vah03, m_prev_val03] = calculate_vwap("1M", "m", c03)
[m_vwap04, m_vah04, m_val04, m_prev_vwap04, m_prev_vah04, m_prev_val04] = calculate_vwap("1M", "m", c04)
[m_vwap05, m_vah05, m_val05, m_prev_vwap05, m_prev_vah05, m_prev_val05] = calculate_vwap("1M", "m", c05)
[m_vwap06, m_vah06, m_val06, m_prev_vwap06, m_prev_vah06, m_prev_val06] = calculate_vwap("1M", "m", c06)
[m_vwap07, m_vah07, m_val07, m_prev_vwap07, m_prev_vah07, m_prev_val07] = calculate_vwap("1M", "m", c07)
[m_vwap08, m_vah08, m_val08, m_prev_vwap08, m_prev_vah08, m_prev_val08] = calculate_vwap("1M", "m", c08)
[m_vwap09, m_vah09, m_val09, m_prev_vwap09, m_prev_vah09, m_prev_val09] = calculate_vwap("1M", "m", c09)
[m_vwap10, m_vah10, m_val10, m_prev_vwap10, m_prev_vah10, m_prev_val10] = calculate_vwap("1M", "m", c10)
[m_vwap11, m_vah11, m_val11, m_prev_vwap11, m_prev_vah11, m_prev_val11] = calculate_vwap("1M", "m", c11)
[m_vwap12, m_vah12, m_val12, m_prev_vwap12, m_prev_vah12, m_prev_val12] = calculate_vwap("1M", "m", c12)
[m_vwap13, m_vah13, m_val13, m_prev_vwap13, m_prev_vah13, m_prev_val13] = calculate_vwap("1M", "m", c13)
[m_vwap14, m_vah14, m_val14, m_prev_vwap14, m_prev_vah14, m_prev_val14] = calculate_vwap("1M", "m", c14)
[m_vwap15, m_vah15, m_val15, m_prev_vwap15, m_prev_vah15, m_prev_val15] = calculate_vwap("1M", "m", c15)
[m_vwap16, m_vah16, m_val16, m_prev_vwap16, m_prev_vah16, m_prev_val16] = calculate_vwap("1M", "m", c16)
[m_vwap17, m_vah17, m_val17, m_prev_vwap17, m_prev_vah17, m_prev_val17] = calculate_vwap("1M", "m", c17)
[m_vwap18, m_vah18, m_val18, m_prev_vwap18, m_prev_vah18, m_prev_val18] = calculate_vwap("1M", "m", c18)
[m_vwap19, m_vah19, m_val19, m_prev_vwap19, m_prev_vah19, m_prev_val19] = calculate_vwap("1M", "m", c19)
[m_vwap20, m_vah20, m_val20, m_prev_vwap20, m_prev_vah20, m_prev_val20] = calculate_vwap("1M", "m", c20)
[m_vwap21, m_vah21, m_val21, m_prev_vwap21, m_prev_vah21, m_prev_val21] = calculate_vwap("1M", "m", c21)
[m_vwap22, m_vah22, m_val22, m_prev_vwap22, m_prev_vah22, m_prev_val22] = calculate_vwap("1M", "m", c22)
[m_vwap23, m_vah23, m_val23, m_prev_vwap23, m_prev_vah23, m_prev_val23] = calculate_vwap("1M", "m", c23)
[m_vwap24, m_vah24, m_val24, m_prev_vwap24, m_prev_vah24, m_prev_val24] = calculate_vwap("1M", "m", c24)
[m_vwap25, m_vah25, m_val25, m_prev_vwap25, m_prev_vah25, m_prev_val25] = calculate_vwap("1M", "m", c25)
[m_vwap26, m_vah26, m_val26, m_prev_vwap26, m_prev_vah26, m_prev_val26] = calculate_vwap("1M", "m", c26)
[m_vwap27, m_vah27, m_val27, m_prev_vwap27, m_prev_vah27, m_prev_val27] = calculate_vwap("1M", "m", c27)
[m_vwap28, m_vah28, m_val28, m_prev_vwap28, m_prev_vah28, m_prev_val28] = calculate_vwap("1M", "m", c28)
[m_vwap29, m_vah29, m_val29, m_prev_vwap29, m_prev_vah29, m_prev_val29] = calculate_vwap("1M", "m", c29)
[m_vwap30, m_vah30, m_val30, m_prev_vwap30, m_prev_vah30, m_prev_val30] = calculate_vwap("1M", "m", c30)
[m_vwap31, m_vah31, m_val31, m_prev_vwap31, m_prev_vah31, m_prev_val31] = calculate_vwap("1M", "m", c31)
[m_vwap32, m_vah32, m_val32, m_prev_vwap32, m_prev_vah32, m_prev_val32] = calculate_vwap("1M", "m", c32)
[m_vwap33, m_vah33, m_val33, m_prev_vwap33, m_prev_vah33, m_prev_val33] = calculate_vwap("1M", "m", c33)
[m_vwap34, m_vah34, m_val34, m_prev_vwap34, m_prev_vah34, m_prev_val34] = calculate_vwap("1M", "m", c34)
[m_vwap35, m_vah35, m_val35, m_prev_vwap35, m_prev_vah35, m_prev_val35] = calculate_vwap("1M", "m", c35)
[m_vwap36, m_vah36, m_val36, m_prev_vwap36, m_prev_vah36, m_prev_val36] = calculate_vwap("1M", "m", c36)
[m_vwap37, m_vah37, m_val37, m_prev_vwap37, m_prev_vah37, m_prev_val37] = calculate_vwap("1M", "m", c37)
[m_vwap38, m_vah38, m_val38, m_prev_vwap38, m_prev_vah38, m_prev_val38] = calculate_vwap("1M", "m", c38)
[m_vwap39, m_vah39, m_val39, m_prev_vwap39, m_prev_vah39, m_prev_val39] = calculate_vwap("1M", "m", c39)
[m_vwap40, m_vah40, m_val40, m_prev_vwap40, m_prev_vah40, m_prev_val40] = calculate_vwap("1M", "m", c40)

// quarterly vwap calcs
[q_vwap01, q_vah01, q_val01, q_prev_vwap01, q_prev_vah01, q_prev_val01] = calculate_vwap("3M", "q", c01)
[q_vwap02, q_vah02, q_val02, q_prev_vwap02, q_prev_vah02, q_prev_val02] = calculate_vwap("3M", "q", c02)
[q_vwap03, q_vah03, q_val03, q_prev_vwap03, q_prev_vah03, q_prev_val03] = calculate_vwap("3M", "q", c03)
[q_vwap04, q_vah04, q_val04, q_prev_vwap04, q_prev_vah04, q_prev_val04] = calculate_vwap("3M", "q", c04)
[q_vwap05, q_vah05, q_val05, q_prev_vwap05, q_prev_vah05, q_prev_val05] = calculate_vwap("3M", "q", c05)
[q_vwap06, q_vah06, q_val06, q_prev_vwap06, q_prev_vah06, q_prev_val06] = calculate_vwap("3M", "q", c06)
[q_vwap07, q_vah07, q_val07, q_prev_vwap07, q_prev_vah07, q_prev_val07] = calculate_vwap("3M", "q", c07)
[q_vwap08, q_vah08, q_val08, q_prev_vwap08, q_prev_vah08, q_prev_val08] = calculate_vwap("3M", "q", c08)
[q_vwap09, q_vah09, q_val09, q_prev_vwap09, q_prev_vah09, q_prev_val09] = calculate_vwap("3M", "q", c09)
[q_vwap10, q_vah10, q_val10, q_prev_vwap10, q_prev_vah10, q_prev_val10] = calculate_vwap("3M", "q", c10)
[q_vwap11, q_vah11, q_val11, q_prev_vwap11, q_prev_vah11, q_prev_val11] = calculate_vwap("3M", "q", c11)
[q_vwap12, q_vah12, q_val12, q_prev_vwap12, q_prev_vah12, q_prev_val12] = calculate_vwap("3M", "q", c12)
[q_vwap13, q_vah13, q_val13, q_prev_vwap13, q_prev_vah13, q_prev_val13] = calculate_vwap("3M", "q", c13)
[q_vwap14, q_vah14, q_val14, q_prev_vwap14, q_prev_vah14, q_prev_val14] = calculate_vwap("3M", "q", c14)
[q_vwap15, q_vah15, q_val15, q_prev_vwap15, q_prev_vah15, q_prev_val15] = calculate_vwap("3M", "q", c15)
[q_vwap16, q_vah16, q_val16, q_prev_vwap16, q_prev_vah16, q_prev_val16] = calculate_vwap("3M", "q", c16)
[q_vwap17, q_vah17, q_val17, q_prev_vwap17, q_prev_vah17, q_prev_val17] = calculate_vwap("3M", "q", c17)
[q_vwap18, q_vah18, q_val18, q_prev_vwap18, q_prev_vah18, q_prev_val18] = calculate_vwap("3M", "q", c18)
[q_vwap19, q_vah19, q_val19, q_prev_vwap19, q_prev_vah19, q_prev_val19] = calculate_vwap("3M", "q", c19)
[q_vwap20, q_vah20, q_val20, q_prev_vwap20, q_prev_vah20, q_prev_val20] = calculate_vwap("3M", "q", c20)
[q_vwap21, q_vah21, q_val21, q_prev_vwap21, q_prev_vah21, q_prev_val21] = calculate_vwap("3M", "q", c21)
[q_vwap22, q_vah22, q_val22, q_prev_vwap22, q_prev_vah22, q_prev_val22] = calculate_vwap("3M", "q", c22)
[q_vwap23, q_vah23, q_val23, q_prev_vwap23, q_prev_vah23, q_prev_val23] = calculate_vwap("3M", "q", c23)
[q_vwap24, q_vah24, q_val24, q_prev_vwap24, q_prev_vah24, q_prev_val24] = calculate_vwap("3M", "q", c24)
[q_vwap25, q_vah25, q_val25, q_prev_vwap25, q_prev_vah25, q_prev_val25] = calculate_vwap("3M", "q", c25)
[q_vwap26, q_vah26, q_val26, q_prev_vwap26, q_prev_vah26, q_prev_val26] = calculate_vwap("3M", "q", c26)
[q_vwap27, q_vah27, q_val27, q_prev_vwap27, q_prev_vah27, q_prev_val27] = calculate_vwap("3M", "q", c27)
[q_vwap28, q_vah28, q_val28, q_prev_vwap28, q_prev_vah28, q_prev_val28] = calculate_vwap("3M", "q", c28)
[q_vwap29, q_vah29, q_val29, q_prev_vwap29, q_prev_vah29, q_prev_val29] = calculate_vwap("3M", "q", c29)
[q_vwap30, q_vah30, q_val30, q_prev_vwap30, q_prev_vah30, q_prev_val30] = calculate_vwap("3M", "q", c30)
[q_vwap31, q_vah31, q_val31, q_prev_vwap31, q_prev_vah31, q_prev_val31] = calculate_vwap("3M", "q", c31)
[q_vwap32, q_vah32, q_val32, q_prev_vwap32, q_prev_vah32, q_prev_val32] = calculate_vwap("3M", "q", c32)
[q_vwap33, q_vah33, q_val33, q_prev_vwap33, q_prev_vah33, q_prev_val33] = calculate_vwap("3M", "q", c33)
[q_vwap34, q_vah34, q_val34, q_prev_vwap34, q_prev_vah34, q_prev_val34] = calculate_vwap("3M", "q", c34)
[q_vwap35, q_vah35, q_val35, q_prev_vwap35, q_prev_vah35, q_prev_val35] = calculate_vwap("3M", "q", c35)
[q_vwap36, q_vah36, q_val36, q_prev_vwap36, q_prev_vah36, q_prev_val36] = calculate_vwap("3M", "q", c36)
[q_vwap37, q_vah37, q_val37, q_prev_vwap37, q_prev_vah37, q_prev_val37] = calculate_vwap("3M", "q", c37)
[q_vwap38, q_vah38, q_val38, q_prev_vwap38, q_prev_vah38, q_prev_val38] = calculate_vwap("3M", "q", c38)
[q_vwap39, q_vah39, q_val39, q_prev_vwap39, q_prev_vah39, q_prev_val39] = calculate_vwap("3M", "q", c39)
[q_vwap40, q_vah40, q_val40, q_prev_vwap40, q_prev_vah40, q_prev_val40] = calculate_vwap("3M", "q", c40)

// yearly vwap calcs
[y_vwap01, y_vah01, y_val01, y_prev_vwap01, y_prev_vah01, y_prev_val01] = calculate_vwap("12M", "y", c01)
[y_vwap02, y_vah02, y_val02, y_prev_vwap02, y_prev_vah02, y_prev_val02] = calculate_vwap("12M", "y", c02)
[y_vwap03, y_vah03, y_val03, y_prev_vwap03, y_prev_vah03, y_prev_val03] = calculate_vwap("12M", "y", c03)
[y_vwap04, y_vah04, y_val04, y_prev_vwap04, y_prev_vah04, y_prev_val04] = calculate_vwap("12M", "y", c04)
[y_vwap05, y_vah05, y_val05, y_prev_vwap05, y_prev_vah05, y_prev_val05] = calculate_vwap("12M", "y", c05)
[y_vwap06, y_vah06, y_val06, y_prev_vwap06, y_prev_vah06, y_prev_val06] = calculate_vwap("12M", "y", c06)
[y_vwap07, y_vah07, y_val07, y_prev_vwap07, y_prev_vah07, y_prev_val07] = calculate_vwap("12M", "y", c07)
[y_vwap08, y_vah08, y_val08, y_prev_vwap08, y_prev_vah08, y_prev_val08] = calculate_vwap("12M", "y", c08)
[y_vwap09, y_vah09, y_val09, y_prev_vwap09, y_prev_vah09, y_prev_val09] = calculate_vwap("12M", "y", c09)
[y_vwap10, y_vah10, y_val10, y_prev_vwap10, y_prev_vah10, y_prev_val10] = calculate_vwap("12M", "y", c10)
[y_vwap11, y_vah11, y_val11, y_prev_vwap11, y_prev_vah11, y_prev_val11] = calculate_vwap("12M", "y", c11)
[y_vwap12, y_vah12, y_val12, y_prev_vwap12, y_prev_vah12, y_prev_val12] = calculate_vwap("12M", "y", c12)
[y_vwap13, y_vah13, y_val13, y_prev_vwap13, y_prev_vah13, y_prev_val13] = calculate_vwap("12M", "y", c13)
[y_vwap14, y_vah14, y_val14, y_prev_vwap14, y_prev_vah14, y_prev_val14] = calculate_vwap("12M", "y", c14)
[y_vwap15, y_vah15, y_val15, y_prev_vwap15, y_prev_vah15, y_prev_val15] = calculate_vwap("12M", "y", c15)
[y_vwap16, y_vah16, y_val16, y_prev_vwap16, y_prev_vah16, y_prev_val16] = calculate_vwap("12M", "y", c16)
[y_vwap17, y_vah17, y_val17, y_prev_vwap17, y_prev_vah17, y_prev_val17] = calculate_vwap("12M", "y", c17)
[y_vwap18, y_vah18, y_val18, y_prev_vwap18, y_prev_vah18, y_prev_val18] = calculate_vwap("12M", "y", c18)
[y_vwap19, y_vah19, y_val19, y_prev_vwap19, y_prev_vah19, y_prev_val19] = calculate_vwap("12M", "y", c19)
[y_vwap20, y_vah20, y_val20, y_prev_vwap20, y_prev_vah20, y_prev_val20] = calculate_vwap("12M", "y", c20)
[y_vwap21, y_vah21, y_val21, y_prev_vwap21, y_prev_vah21, y_prev_val21] = calculate_vwap("12M", "y", c21)
[y_vwap22, y_vah22, y_val22, y_prev_vwap22, y_prev_vah22, y_prev_val22] = calculate_vwap("12M", "y", c22)
[y_vwap23, y_vah23, y_val23, y_prev_vwap23, y_prev_vah23, y_prev_val23] = calculate_vwap("12M", "y", c23)
[y_vwap24, y_vah24, y_val24, y_prev_vwap24, y_prev_vah24, y_prev_val24] = calculate_vwap("12M", "y", c24)
[y_vwap25, y_vah25, y_val25, y_prev_vwap25, y_prev_vah25, y_prev_val25] = calculate_vwap("12M", "y", c25)
[y_vwap26, y_vah26, y_val26, y_prev_vwap26, y_prev_vah26, y_prev_val26] = calculate_vwap("12M", "y", c26)
[y_vwap27, y_vah27, y_val27, y_prev_vwap27, y_prev_vah27, y_prev_val27] = calculate_vwap("12M", "y", c27)
[y_vwap28, y_vah28, y_val28, y_prev_vwap28, y_prev_vah28, y_prev_val28] = calculate_vwap("12M", "y", c28)
[y_vwap29, y_vah29, y_val29, y_prev_vwap29, y_prev_vah29, y_prev_val29] = calculate_vwap("12M", "y", c29)
[y_vwap30, y_vah30, y_val30, y_prev_vwap30, y_prev_vah30, y_prev_val30] = calculate_vwap("12M", "y", c30)
[y_vwap31, y_vah31, y_val31, y_prev_vwap31, y_prev_vah31, y_prev_val31] = calculate_vwap("12M", "y", c31)
[y_vwap32, y_vah32, y_val32, y_prev_vwap32, y_prev_vah32, y_prev_val32] = calculate_vwap("12M", "y", c32)
[y_vwap33, y_vah33, y_val33, y_prev_vwap33, y_prev_vah33, y_prev_val33] = calculate_vwap("12M", "y", c33)
[y_vwap34, y_vah34, y_val34, y_prev_vwap34, y_prev_vah34, y_prev_val34] = calculate_vwap("12M", "y", c34)
[y_vwap35, y_vah35, y_val35, y_prev_vwap35, y_prev_vah35, y_prev_val35] = calculate_vwap("12M", "y", c35)
[y_vwap36, y_vah36, y_val36, y_prev_vwap36, y_prev_vah36, y_prev_val36] = calculate_vwap("12M", "y", c36)
[y_vwap37, y_vah37, y_val37, y_prev_vwap37, y_prev_vah37, y_prev_val37] = calculate_vwap("12M", "y", c37)
[y_vwap38, y_vah38, y_val38, y_prev_vwap38, y_prev_vah38, y_prev_val38] = calculate_vwap("12M", "y", c38)
[y_vwap39, y_vah39, y_val39, y_prev_vwap39, y_prev_vah39, y_prev_val39] = calculate_vwap("12M", "y", c39)
[y_vwap40, y_vah40, y_val40, y_prev_vwap40, y_prev_vah40, y_prev_val40] = calculate_vwap("12M", "y", c40)

// create arrays for storage
var string[] symbol_arr       = array.new_string(40)
var float[] close_arr         = array.new_float(40, na)

// weekly
var float[] w_vwap_arr        = array.new_float(40, na)
var float[] w_vah_arr         = array.new_float(40, na)
var float[] w_val_arr         = array.new_float(40, na)
var float[] w_prev_vwap_arr   = array.new_float(40, na)
var float[] w_prev_vah_arr    = array.new_float(40, na)
var float[] w_prev_val_arr    = array.new_float(40, na)

// monthly
var float[] m_vwap_arr        = array.new_float(40, na)
var float[] m_vah_arr         = array.new_float(40, na)
var float[] m_val_arr         = array.new_float(40, na)
var float[] m_prev_vwap_arr   = array.new_float(40, na)
var float[] m_prev_vah_arr    = array.new_float(40, na)
var float[] m_prev_val_arr    = array.new_float(40, na)

// quarterly
var float[] q_vwap_arr        = array.new_float(40, na)
var float[] q_vah_arr         = array.new_float(40, na)
var float[] q_val_arr         = array.new_float(40, na)
var float[] q_prev_vwap_arr   = array.new_float(40, na)
var float[] q_prev_vah_arr    = array.new_float(40, na)
var float[] q_prev_val_arr    = array.new_float(40, na)

// yearly
var float[] y_vwap_arr        = array.new_float(40, na)
var float[] y_vah_arr         = array.new_float(40, na)
var float[] y_val_arr         = array.new_float(40, na)
var float[] y_prev_vwap_arr   = array.new_float(40, na)
var float[] y_prev_vah_arr    = array.new_float(40, na)
var float[] y_prev_val_arr    = array.new_float(40, na)

// populate arrays on last bar
if barstate.isfirst
    array.set(symbol_arr, 0, s01)
    array.set(symbol_arr, 1, s02)
    array.set(symbol_arr, 2, s03)
    array.set(symbol_arr, 3, s04)
    array.set(symbol_arr, 4, s05)
    array.set(symbol_arr, 5, s06)
    array.set(symbol_arr, 6, s07)
    array.set(symbol_arr, 7, s08)
    array.set(symbol_arr, 8, s09)
    array.set(symbol_arr, 9, s10)
    array.set(symbol_arr, 10, s11)
    array.set(symbol_arr, 11, s12)
    array.set(symbol_arr, 12, s13)
    array.set(symbol_arr, 13, s14)
    array.set(symbol_arr, 14, s15)
    array.set(symbol_arr, 15, s16)
    array.set(symbol_arr, 16, s17)
    array.set(symbol_arr, 17, s18)
    array.set(symbol_arr, 18, s19)
    array.set(symbol_arr, 19, s20)
    array.set(symbol_arr, 20, s21)
    array.set(symbol_arr, 21, s22)
    array.set(symbol_arr, 22, s23)
    array.set(symbol_arr, 23, s24)
    array.set(symbol_arr, 24, s25)
    array.set(symbol_arr, 25, s26)
    array.set(symbol_arr, 26, s27)
    array.set(symbol_arr, 27, s28)
    array.set(symbol_arr, 28, s29)
    array.set(symbol_arr, 29, s30)
    array.set(symbol_arr, 30, s31)
    array.set(symbol_arr, 31, s32)
    array.set(symbol_arr, 32, s33)
    array.set(symbol_arr, 33, s34)
    array.set(symbol_arr, 34, s35)
    array.set(symbol_arr, 35, s36)
    array.set(symbol_arr, 36, s37)
    array.set(symbol_arr, 37, s38)
    array.set(symbol_arr, 38, s39)
    array.set(symbol_arr, 39, s40)

if barstate.islast
    array.set(close_arr, 0, c01)
    array.set(close_arr, 1, c02)
    array.set(close_arr, 2, c03)
    array.set(close_arr, 3, c04)
    array.set(close_arr, 4, c05)
    array.set(close_arr, 5, c06)
    array.set(close_arr, 6, c07)
    array.set(close_arr, 7, c08)
    array.set(close_arr, 8, c09)
    array.set(close_arr, 9, c10)
    array.set(close_arr, 10, c11)
    array.set(close_arr, 11, c12)
    array.set(close_arr, 12, c13)
    array.set(close_arr, 13, c14)
    array.set(close_arr, 14, c15)
    array.set(close_arr, 15, c16)
    array.set(close_arr, 16, c17)
    array.set(close_arr, 17, c18)
    array.set(close_arr, 18, c19)
    array.set(close_arr, 19, c20)
    array.set(close_arr, 20, c21)
    array.set(close_arr, 21, c22)
    array.set(close_arr, 22, c23)
    array.set(close_arr, 23, c24)
    array.set(close_arr, 24, c25)
    array.set(close_arr, 25, c26)
    array.set(close_arr, 26, c27)
    array.set(close_arr, 27, c28)
    array.set(close_arr, 28, c29)
    array.set(close_arr, 29, c30)
    array.set(close_arr, 30, c31)
    array.set(close_arr, 31, c32)
    array.set(close_arr, 32, c33)
    array.set(close_arr, 33, c34)
    array.set(close_arr, 34, c35)
    array.set(close_arr, 35, c36)
    array.set(close_arr, 36, c37)
    array.set(close_arr, 37, c38)
    array.set(close_arr, 38, c39)
    array.set(close_arr, 39, c40)
    array.set(w_vwap_arr, 0, w_vwap01), array.set(w_vah_arr, 0, w_vah01), array.set(w_val_arr, 0, w_val01)
    array.set(w_prev_vwap_arr, 0, w_prev_vwap01), array.set(w_prev_vah_arr, 0, w_prev_vah01), array.set(w_prev_val_arr, 0, w_prev_val01)
    array.set(w_vwap_arr, 1, w_vwap02), array.set(w_vah_arr, 1, w_vah02), array.set(w_val_arr, 1, w_val02)
    array.set(w_prev_vwap_arr, 1, w_prev_vwap02), array.set(w_prev_vah_arr, 1, w_prev_vah02), array.set(w_prev_val_arr, 1, w_prev_val02)
    array.set(w_vwap_arr, 2, w_vwap03), array.set(w_vah_arr, 2, w_vah03), array.set(w_val_arr, 2, w_val03)
    array.set(w_prev_vwap_arr, 2, w_prev_vwap03), array.set(w_prev_vah_arr, 2, w_prev_vah03), array.set(w_prev_val_arr, 2, w_prev_val03)
    array.set(w_vwap_arr, 3, w_vwap04), array.set(w_vah_arr, 3, w_vah04), array.set(w_val_arr, 3, w_val04)
    array.set(w_prev_vwap_arr, 3, w_prev_vwap04), array.set(w_prev_vah_arr, 3, w_prev_vah04), array.set(w_prev_val_arr, 3, w_prev_val04)
    array.set(w_vwap_arr, 4, w_vwap05), array.set(w_vah_arr, 4, w_vah05), array.set(w_val_arr, 4, w_val05)
    array.set(w_prev_vwap_arr, 4, w_prev_vwap05), array.set(w_prev_vah_arr, 4, w_prev_vah05), array.set(w_prev_val_arr, 4, w_prev_val05)
    array.set(w_vwap_arr, 5, w_vwap06), array.set(w_vah_arr, 5, w_vah06), array.set(w_val_arr, 5, w_val06)
    array.set(w_prev_vwap_arr, 5, w_prev_vwap06), array.set(w_prev_vah_arr, 5, w_prev_vah06), array.set(w_prev_val_arr, 5, w_prev_val06)
    array.set(w_vwap_arr, 6, w_vwap07), array.set(w_vah_arr, 6, w_vah07), array.set(w_val_arr, 6, w_val07)
    array.set(w_prev_vwap_arr, 6, w_prev_vwap07), array.set(w_prev_vah_arr, 6, w_prev_vah07), array.set(w_prev_val_arr, 6, w_prev_val07)
    array.set(w_vwap_arr, 7, w_vwap08), array.set(w_vah_arr, 7, w_vah08), array.set(w_val_arr, 7, w_val08)
    array.set(w_prev_vwap_arr, 7, w_prev_vwap08), array.set(w_prev_vah_arr, 7, w_prev_vah08), array.set(w_prev_val_arr, 7, w_prev_val08)
    array.set(w_vwap_arr, 8, w_vwap09), array.set(w_vah_arr, 8, w_vah09), array.set(w_val_arr, 8, w_val09)
    array.set(w_prev_vwap_arr, 8, w_prev_vwap09), array.set(w_prev_vah_arr, 8, w_prev_vah09), array.set(w_prev_val_arr, 8, w_prev_val09)
    array.set(w_vwap_arr, 9, w_vwap10), array.set(w_vah_arr, 9, w_vah10), array.set(w_val_arr, 9, w_val10)
    array.set(w_prev_vwap_arr, 9, w_prev_vwap10), array.set(w_prev_vah_arr, 9, w_prev_vah10), array.set(w_prev_val_arr, 9, w_prev_val10)
    array.set(w_vwap_arr, 10, w_vwap11), array.set(w_vah_arr, 10, w_vah11), array.set(w_val_arr, 10, w_val11)
    array.set(w_prev_vwap_arr, 10, w_prev_vwap11), array.set(w_prev_vah_arr, 10, w_prev_vah11), array.set(w_prev_val_arr, 10, w_prev_val11)
    array.set(w_vwap_arr, 11, w_vwap12), array.set(w_vah_arr, 11, w_vah12), array.set(w_val_arr, 11, w_val12)
    array.set(w_prev_vwap_arr, 11, w_prev_vwap12), array.set(w_prev_vah_arr, 11, w_prev_vah12), array.set(w_prev_val_arr, 11, w_prev_val12)
    array.set(w_vwap_arr, 12, w_vwap13), array.set(w_vah_arr, 12, w_vah13), array.set(w_val_arr, 12, w_val13)
    array.set(w_prev_vwap_arr, 12, w_prev_vwap13), array.set(w_prev_vah_arr, 12, w_prev_vah13), array.set(w_prev_val_arr, 12, w_prev_val13)
    array.set(w_vwap_arr, 13, w_vwap14), array.set(w_vah_arr, 13, w_vah14), array.set(w_val_arr, 13, w_val14)
    array.set(w_prev_vwap_arr, 13, w_prev_vwap14), array.set(w_prev_vah_arr, 13, w_prev_vah14), array.set(w_prev_val_arr, 13, w_prev_val14)
    array.set(w_vwap_arr, 14, w_vwap15), array.set(w_vah_arr, 14, w_vah15), array.set(w_val_arr, 14, w_val15)
    array.set(w_prev_vwap_arr, 14, w_prev_vwap15), array.set(w_prev_vah_arr, 14, w_prev_vah15), array.set(w_prev_val_arr, 14, w_prev_val15)
    array.set(w_vwap_arr, 15, w_vwap16), array.set(w_vah_arr, 15, w_vah16), array.set(w_val_arr, 15, w_val16)
    array.set(w_prev_vwap_arr, 15, w_prev_vwap16), array.set(w_prev_vah_arr, 15, w_prev_vah16), array.set(w_prev_val_arr, 15, w_prev_val16)
    array.set(w_vwap_arr, 16, w_vwap17), array.set(w_vah_arr, 16, w_vah17), array.set(w_val_arr, 16, w_val17)
    array.set(w_prev_vwap_arr, 16, w_prev_vwap17), array.set(w_prev_vah_arr, 16, w_prev_vah17), array.set(w_prev_val_arr, 16, w_prev_val17)
    array.set(w_vwap_arr, 17, w_vwap18), array.set(w_vah_arr, 17, w_vah18), array.set(w_val_arr, 17, w_val18)
    array.set(w_prev_vwap_arr, 17, w_prev_vwap18), array.set(w_prev_vah_arr, 17, w_prev_vah18), array.set(w_prev_val_arr, 17, w_prev_val18)
    array.set(w_vwap_arr, 18, w_vwap19), array.set(w_vah_arr, 18, w_vah19), array.set(w_val_arr, 18, w_val19)
    array.set(w_prev_vwap_arr, 18, w_prev_vwap19), array.set(w_prev_vah_arr, 18, w_prev_vah19), array.set(w_prev_val_arr, 18, w_prev_val19)
    array.set(w_vwap_arr, 19, w_vwap20), array.set(w_vah_arr, 19, w_vah20), array.set(w_val_arr, 19, w_val20)
    array.set(w_prev_vwap_arr, 19, w_prev_vwap20), array.set(w_prev_vah_arr, 19, w_prev_vah20), array.set(w_prev_val_arr, 19, w_prev_val20)
    array.set(w_vwap_arr, 20, w_vwap21), array.set(w_vah_arr, 20, w_vah21), array.set(w_val_arr, 20, w_val21)
    array.set(w_prev_vwap_arr, 20, w_prev_vwap21), array.set(w_prev_vah_arr, 20, w_prev_vah21), array.set(w_prev_val_arr, 20, w_prev_val21)
    array.set(w_vwap_arr, 21, w_vwap22), array.set(w_vah_arr, 21, w_vah22), array.set(w_val_arr, 21, w_val22)
    array.set(w_prev_vwap_arr, 21, w_prev_vwap22), array.set(w_prev_vah_arr, 21, w_prev_vah22), array.set(w_prev_val_arr, 21, w_prev_val22)
    array.set(w_vwap_arr, 22, w_vwap23), array.set(w_vah_arr, 22, w_vah23), array.set(w_val_arr, 22, w_val23)
    array.set(w_prev_vwap_arr, 22, w_prev_vwap23), array.set(w_prev_vah_arr, 22, w_prev_vah23), array.set(w_prev_val_arr, 22, w_prev_val23)
    array.set(w_vwap_arr, 23, w_vwap24), array.set(w_vah_arr, 23, w_vah24), array.set(w_val_arr, 23, w_val24)
    array.set(w_prev_vwap_arr, 23, w_prev_vwap24), array.set(w_prev_vah_arr, 23, w_prev_vah24), array.set(w_prev_val_arr, 23, w_prev_val24)
    array.set(w_vwap_arr, 24, w_vwap25), array.set(w_vah_arr, 24, w_vah25), array.set(w_val_arr, 24, w_val25)
    array.set(w_prev_vwap_arr, 24, w_prev_vwap25), array.set(w_prev_vah_arr, 24, w_prev_vah25), array.set(w_prev_val_arr, 24, w_prev_val25)
    array.set(w_vwap_arr, 25, w_vwap26), array.set(w_vah_arr, 25, w_vah26), array.set(w_val_arr, 25, w_val26)
    array.set(w_prev_vwap_arr, 25, w_prev_vwap26), array.set(w_prev_vah_arr, 25, w_prev_vah26), array.set(w_prev_val_arr, 25, w_prev_val26)
    array.set(w_vwap_arr, 26, w_vwap27), array.set(w_vah_arr, 26, w_vah27), array.set(w_val_arr, 26, w_val27)
    array.set(w_prev_vwap_arr, 26, w_prev_vwap27), array.set(w_prev_vah_arr, 26, w_prev_vah27), array.set(w_prev_val_arr, 26, w_prev_val27)
    array.set(w_vwap_arr, 27, w_vwap28), array.set(w_vah_arr, 27, w_vah28), array.set(w_val_arr, 27, w_val28)
    array.set(w_prev_vwap_arr, 27, w_prev_vwap28), array.set(w_prev_vah_arr, 27, w_prev_vah28), array.set(w_prev_val_arr, 27, w_prev_val28)
    array.set(w_vwap_arr, 28, w_vwap29), array.set(w_vah_arr, 28, w_vah29), array.set(w_val_arr, 28, w_val29)
    array.set(w_prev_vwap_arr, 28, w_prev_vwap29), array.set(w_prev_vah_arr, 28, w_prev_vah29), array.set(w_prev_val_arr, 28, w_prev_val29)
    array.set(w_vwap_arr, 29, w_vwap30), array.set(w_vah_arr, 29, w_vah30), array.set(w_val_arr, 29, w_val30)
    array.set(w_prev_vwap_arr, 29, w_prev_vwap30), array.set(w_prev_vah_arr, 29, w_prev_vah30), array.set(w_prev_val_arr, 29, w_prev_val30)
    array.set(w_vwap_arr, 30, w_vwap31), array.set(w_vah_arr, 30, w_vah31), array.set(w_val_arr, 30, w_val31)
    array.set(w_prev_vwap_arr, 30, w_prev_vwap31), array.set(w_prev_vah_arr, 30, w_prev_vah31), array.set(w_prev_val_arr, 30, w_prev_val31)
    array.set(w_vwap_arr, 31, w_vwap32), array.set(w_vah_arr, 31, w_vah32), array.set(w_val_arr, 31, w_val32)
    array.set(w_prev_vwap_arr, 31, w_prev_vwap32), array.set(w_prev_vah_arr, 31, w_prev_vah32), array.set(w_prev_val_arr, 31, w_prev_val32)
    array.set(w_vwap_arr, 32, w_vwap33), array.set(w_vah_arr, 32, w_vah33), array.set(w_val_arr, 32, w_val33)
    array.set(w_prev_vwap_arr, 32, w_prev_vwap33), array.set(w_prev_vah_arr, 32, w_prev_vah33), array.set(w_prev_val_arr, 32, w_prev_val33)
    array.set(w_vwap_arr, 33, w_vwap34), array.set(w_vah_arr, 33, w_vah34), array.set(w_val_arr, 33, w_val34)
    array.set(w_prev_vwap_arr, 33, w_prev_vwap34), array.set(w_prev_vah_arr, 33, w_prev_vah34), array.set(w_prev_val_arr, 33, w_prev_val34)
    array.set(w_vwap_arr, 34, w_vwap35), array.set(w_vah_arr, 34, w_vah35), array.set(w_val_arr, 34, w_val35)
    array.set(w_prev_vwap_arr, 34, w_prev_vwap35), array.set(w_prev_vah_arr, 34, w_prev_vah35), array.set(w_prev_val_arr, 34, w_prev_val35)
    array.set(w_vwap_arr, 35, w_vwap36), array.set(w_vah_arr, 35, w_vah36), array.set(w_val_arr, 35, w_val36)
    array.set(w_prev_vwap_arr, 35, w_prev_vwap36), array.set(w_prev_vah_arr, 35, w_prev_vah36), array.set(w_prev_val_arr, 35, w_prev_val36)
    array.set(w_vwap_arr, 36, w_vwap37), array.set(w_vah_arr, 36, w_vah37), array.set(w_val_arr, 36, w_val37)
    array.set(w_prev_vwap_arr, 36, w_prev_vwap37), array.set(w_prev_vah_arr, 36, w_prev_vah37), array.set(w_prev_val_arr, 36, w_prev_val37)
    array.set(w_vwap_arr, 37, w_vwap38), array.set(w_vah_arr, 37, w_vah38), array.set(w_val_arr, 37, w_val38)
    array.set(w_prev_vwap_arr, 37, w_prev_vwap38), array.set(w_prev_vah_arr, 37, w_prev_vah38), array.set(w_prev_val_arr, 37, w_prev_val38)
    array.set(w_vwap_arr, 38, w_vwap39), array.set(w_vah_arr, 38, w_vah39), array.set(w_val_arr, 38, w_val39)
    array.set(w_prev_vwap_arr, 38, w_prev_vwap39), array.set(w_prev_vah_arr, 38, w_prev_vah39), array.set(w_prev_val_arr, 38, w_prev_val39)
    array.set(w_vwap_arr, 39, w_vwap40), array.set(w_vah_arr, 39, w_vah40), array.set(w_val_arr, 39, w_val40)
    array.set(w_prev_vwap_arr, 39, w_prev_vwap40), array.set(w_prev_vah_arr, 39, w_prev_vah40), array.set(w_prev_val_arr, 39, w_prev_val40)
    array.set(m_vwap_arr, 0, m_vwap01), array.set(m_vah_arr, 0, m_vah01), array.set(m_val_arr, 0, m_val01)
    array.set(m_prev_vwap_arr, 0, m_prev_vwap01), array.set(m_prev_vah_arr, 0, m_prev_vah01), array.set(m_prev_val_arr, 0, m_prev_val01)
    array.set(m_vwap_arr, 1, m_vwap02), array.set(m_vah_arr, 1, m_vah02), array.set(m_val_arr, 1, m_val02)
    array.set(m_prev_vwap_arr, 1, m_prev_vwap02), array.set(m_prev_vah_arr, 1, m_prev_vah02), array.set(m_prev_val_arr, 1, m_prev_val02)
    array.set(m_vwap_arr, 2, m_vwap03), array.set(m_vah_arr, 2, m_vah03), array.set(m_val_arr, 2, m_val03)
    array.set(m_prev_vwap_arr, 2, m_prev_vwap03), array.set(m_prev_vah_arr, 2, m_prev_vah03), array.set(m_prev_val_arr, 2, m_prev_val03)
    array.set(m_vwap_arr, 3, m_vwap04), array.set(m_vah_arr, 3, m_vah04), array.set(m_val_arr, 3, m_val04)
    array.set(m_prev_vwap_arr, 3, m_prev_vwap04), array.set(m_prev_vah_arr, 3, m_prev_vah04), array.set(m_prev_val_arr, 3, m_prev_val04)
    array.set(m_vwap_arr, 4, m_vwap05), array.set(m_vah_arr, 4, m_vah05), array.set(m_val_arr, 4, m_val05)
    array.set(m_prev_vwap_arr, 4, m_prev_vwap05), array.set(m_prev_vah_arr, 4, m_prev_vah05), array.set(m_prev_val_arr, 4, m_prev_val05)
    array.set(m_vwap_arr, 5, m_vwap06), array.set(m_vah_arr, 5, m_vah06), array.set(m_val_arr, 5, m_val06)
    array.set(m_prev_vwap_arr, 5, m_prev_vwap06), array.set(m_prev_vah_arr, 5, m_prev_vah06), array.set(m_prev_val_arr, 5, m_prev_val06)
    array.set(m_vwap_arr, 6, m_vwap07), array.set(m_vah_arr, 6, m_vah07), array.set(m_val_arr, 6, m_val07)
    array.set(m_prev_vwap_arr, 6, m_prev_vwap07), array.set(m_prev_vah_arr, 6, m_prev_vah07), array.set(m_prev_val_arr, 6, m_prev_val07)
    array.set(m_vwap_arr, 7, m_vwap08), array.set(m_vah_arr, 7, m_vah08), array.set(m_val_arr, 7, m_val08)
    array.set(m_prev_vwap_arr, 7, m_prev_vwap08), array.set(m_prev_vah_arr, 7, m_prev_vah08), array.set(m_prev_val_arr, 7, m_prev_val08)
    array.set(m_vwap_arr, 8, m_vwap09), array.set(m_vah_arr, 8, m_vah09), array.set(m_val_arr, 8, m_val09)
    array.set(m_prev_vwap_arr, 8, m_prev_vwap09), array.set(m_prev_vah_arr, 8, m_prev_vah09), array.set(m_prev_val_arr, 8, m_prev_val09)
    array.set(m_vwap_arr, 9, m_vwap10), array.set(m_vah_arr, 9, m_vah10), array.set(m_val_arr, 9, m_val10)
    array.set(m_prev_vwap_arr, 9, m_prev_vwap10), array.set(m_prev_vah_arr, 9, m_prev_vah10), array.set(m_prev_val_arr, 9, m_prev_val10)
    array.set(m_vwap_arr, 10, m_vwap11), array.set(m_vah_arr, 10, m_vah11), array.set(m_val_arr, 10, m_val11)
    array.set(m_prev_vwap_arr, 10, m_prev_vwap11), array.set(m_prev_vah_arr, 10, m_prev_vah11), array.set(m_prev_val_arr, 10, m_prev_val11)
    array.set(m_vwap_arr, 11, m_vwap12), array.set(m_vah_arr, 11, m_vah12), array.set(m_val_arr, 11, m_val12)
    array.set(m_prev_vwap_arr, 11, m_prev_vwap12), array.set(m_prev_vah_arr, 11, m_prev_vah12), array.set(m_prev_val_arr, 11, m_prev_val12)
    array.set(m_vwap_arr, 12, m_vwap13), array.set(m_vah_arr, 12, m_vah13), array.set(m_val_arr, 12, m_val13)
    array.set(m_prev_vwap_arr, 12, m_prev_vwap13), array.set(m_prev_vah_arr, 12, m_prev_vah13), array.set(m_prev_val_arr, 12, m_prev_val13)
    array.set(m_vwap_arr, 13, m_vwap14), array.set(m_vah_arr, 13, m_vah14), array.set(m_val_arr, 13, m_val14)
    array.set(m_prev_vwap_arr, 13, m_prev_vwap14), array.set(m_prev_vah_arr, 13, m_prev_vah14), array.set(m_prev_val_arr, 13, m_prev_val14)
    array.set(m_vwap_arr, 14, m_vwap15), array.set(m_vah_arr, 14, m_vah15), array.set(m_val_arr, 14, m_val15)
    array.set(m_prev_vwap_arr, 14, m_prev_vwap15), array.set(m_prev_vah_arr, 14, m_prev_vah15), array.set(m_prev_val_arr, 14, m_prev_val15)
    array.set(m_vwap_arr, 15, m_vwap16), array.set(m_vah_arr, 15, m_vah16), array.set(m_val_arr, 15, m_val16)
    array.set(m_prev_vwap_arr, 15, m_prev_vwap16), array.set(m_prev_vah_arr, 15, m_prev_vah16), array.set(m_prev_val_arr, 15, m_prev_val16)
    array.set(m_vwap_arr, 16, m_vwap17), array.set(m_vah_arr, 16, m_vah17), array.set(m_val_arr, 16, m_val17)
    array.set(m_prev_vwap_arr, 16, m_prev_vwap17), array.set(m_prev_vah_arr, 16, m_prev_vah17), array.set(m_prev_val_arr, 16, m_prev_val17)
    array.set(m_vwap_arr, 17, m_vwap18), array.set(m_vah_arr, 17, m_vah18), array.set(m_val_arr, 17, m_val18)
    array.set(m_prev_vwap_arr, 17, m_prev_vwap18), array.set(m_prev_vah_arr, 17, m_prev_vah18), array.set(m_prev_val_arr, 17, m_prev_val18)
    array.set(m_vwap_arr, 18, m_vwap19), array.set(m_vah_arr, 18, m_vah19), array.set(m_val_arr, 18, m_val19)
    array.set(m_prev_vwap_arr, 18, m_prev_vwap19), array.set(m_prev_vah_arr, 18, m_prev_vah19), array.set(m_prev_val_arr, 18, m_prev_val19)
    array.set(m_vwap_arr, 19, m_vwap20), array.set(m_vah_arr, 19, m_vah20), array.set(m_val_arr, 19, m_val20)
    array.set(m_prev_vwap_arr, 19, m_prev_vwap20), array.set(m_prev_vah_arr, 19, m_prev_vah20), array.set(m_prev_val_arr, 19, m_prev_val20)
    array.set(m_vwap_arr, 20, m_vwap21), array.set(m_vah_arr, 20, m_vah21), array.set(m_val_arr, 20, m_val21)
    array.set(m_prev_vwap_arr, 20, m_prev_vwap21), array.set(m_prev_vah_arr, 20, m_prev_vah21), array.set(m_prev_val_arr, 20, m_prev_val21)
    array.set(m_vwap_arr, 21, m_vwap22), array.set(m_vah_arr, 21, m_vah22), array.set(m_val_arr, 21, m_val22)
    array.set(m_prev_vwap_arr, 21, m_prev_vwap22), array.set(m_prev_vah_arr, 21, m_prev_vah22), array.set(m_prev_val_arr, 21, m_prev_val22)
    array.set(m_vwap_arr, 22, m_vwap23), array.set(m_vah_arr, 22, m_vah23), array.set(m_val_arr, 22, m_val23)
    array.set(m_prev_vwap_arr, 22, m_prev_vwap23), array.set(m_prev_vah_arr, 22, m_prev_vah23), array.set(m_prev_val_arr, 22, m_prev_val23)
    array.set(m_vwap_arr, 23, m_vwap24), array.set(m_vah_arr, 23, m_vah24), array.set(m_val_arr, 23, m_val24)
    array.set(m_prev_vwap_arr, 23, m_prev_vwap24), array.set(m_prev_vah_arr, 23, m_prev_vah24), array.set(m_prev_val_arr, 23, m_prev_val24)
    array.set(m_vwap_arr, 24, m_vwap25), array.set(m_vah_arr, 24, m_vah25), array.set(m_val_arr, 24, m_val25)
    array.set(m_prev_vwap_arr, 24, m_prev_vwap25), array.set(m_prev_vah_arr, 24, m_prev_vah25), array.set(m_prev_val_arr, 24, m_prev_val25)
    array.set(m_vwap_arr, 25, m_vwap26), array.set(m_vah_arr, 25, m_vah26), array.set(m_val_arr, 25, m_val26)
    array.set(m_prev_vwap_arr, 25, m_prev_vwap26), array.set(m_prev_vah_arr, 25, m_prev_vah26), array.set(m_prev_val_arr, 25, m_prev_val26)
    array.set(m_vwap_arr, 26, m_vwap27), array.set(m_vah_arr, 26, m_vah27), array.set(m_val_arr, 26, m_val27)
    array.set(m_prev_vwap_arr, 26, m_prev_vwap27), array.set(m_prev_vah_arr, 26, m_prev_vah27), array.set(m_prev_val_arr, 26, m_prev_val27)
    array.set(m_vwap_arr, 27, m_vwap28), array.set(m_vah_arr, 27, m_vah28), array.set(m_val_arr, 27, m_val28)
    array.set(m_prev_vwap_arr, 27, m_prev_vwap28), array.set(m_prev_vah_arr, 27, m_prev_vah28), array.set(m_prev_val_arr, 27, m_prev_val28)
    array.set(m_vwap_arr, 28, m_vwap29), array.set(m_vah_arr, 28, m_vah29), array.set(m_val_arr, 28, m_val29)
    array.set(m_prev_vwap_arr, 28, m_prev_vwap29), array.set(m_prev_vah_arr, 28, m_prev_vah29), array.set(m_prev_val_arr, 28, m_prev_val29)
    array.set(m_vwap_arr, 29, m_vwap30), array.set(m_vah_arr, 29, m_vah30), array.set(m_val_arr, 29, m_val30)
    array.set(m_prev_vwap_arr, 29, m_prev_vwap30), array.set(m_prev_vah_arr, 29, m_prev_vah30), array.set(m_prev_val_arr, 29, m_prev_val30)
    array.set(m_vwap_arr, 30, m_vwap31), array.set(m_vah_arr, 30, m_vah31), array.set(m_val_arr, 30, m_val31)
    array.set(m_prev_vwap_arr, 30, m_prev_vwap31), array.set(m_prev_vah_arr, 30, m_prev_vah31), array.set(m_prev_val_arr, 30, m_prev_val31)
    array.set(m_vwap_arr, 31, m_vwap32), array.set(m_vah_arr, 31, m_vah32), array.set(m_val_arr, 31, m_val32)
    array.set(m_prev_vwap_arr, 31, m_prev_vwap32), array.set(m_prev_vah_arr, 31, m_prev_vah32), array.set(m_prev_val_arr, 31, m_prev_val32)
    array.set(m_vwap_arr, 32, m_vwap33), array.set(m_vah_arr, 32, m_vah33), array.set(m_val_arr, 32, m_val33)
    array.set(m_prev_vwap_arr, 32, m_prev_vwap33), array.set(m_prev_vah_arr, 32, m_prev_vah33), array.set(m_prev_val_arr, 32, m_prev_val33)
    array.set(m_vwap_arr, 33, m_vwap34), array.set(m_vah_arr, 33, m_vah34), array.set(m_val_arr, 33, m_val34)
    array.set(m_prev_vwap_arr, 33, m_prev_vwap34), array.set(m_prev_vah_arr, 33, m_prev_vah34), array.set(m_prev_val_arr, 33, m_prev_val34)
    array.set(m_vwap_arr, 34, m_vwap35), array.set(m_vah_arr, 34, m_vah35), array.set(m_val_arr, 34, m_val35)
    array.set(m_prev_vwap_arr, 34, m_prev_vwap35), array.set(m_prev_vah_arr, 34, m_prev_vah35), array.set(m_prev_val_arr, 34, m_prev_val35)
    array.set(m_vwap_arr, 35, m_vwap36), array.set(m_vah_arr, 35, m_vah36), array.set(m_val_arr, 35, m_val36)
    array.set(m_prev_vwap_arr, 35, m_prev_vwap36), array.set(m_prev_vah_arr, 35, m_prev_vah36), array.set(m_prev_val_arr, 35, m_prev_val36)
    array.set(m_vwap_arr, 36, m_vwap37), array.set(m_vah_arr, 36, m_vah37), array.set(m_val_arr, 36, m_val37)
    array.set(m_prev_vwap_arr, 36, m_prev_vwap37), array.set(m_prev_vah_arr, 36, m_prev_vah37), array.set(m_prev_val_arr, 36, m_prev_val37)
    array.set(m_vwap_arr, 37, m_vwap38), array.set(m_vah_arr, 37, m_vah38), array.set(m_val_arr, 37, m_val38)
    array.set(m_prev_vwap_arr, 37, m_prev_vwap38), array.set(m_prev_vah_arr, 37, m_prev_vah38), array.set(m_prev_val_arr, 37, m_prev_val38)
    array.set(m_vwap_arr, 38, m_vwap39), array.set(m_vah_arr, 38, m_vah39), array.set(m_val_arr, 38, m_val39)
    array.set(m_prev_vwap_arr, 38, m_prev_vwap39), array.set(m_prev_vah_arr, 38, m_prev_vah39), array.set(m_prev_val_arr, 38, m_prev_val39)
    array.set(m_vwap_arr, 39, m_vwap40), array.set(m_vah_arr, 39, m_vah40), array.set(m_val_arr, 39, m_val40)
    array.set(m_prev_vwap_arr, 39, m_prev_vwap40), array.set(m_prev_vah_arr, 39, m_prev_vah40), array.set(m_prev_val_arr, 39, m_prev_val40)
    array.set(q_vwap_arr, 0, q_vwap01), array.set(q_vah_arr, 0, q_vah01), array.set(q_val_arr, 0, q_val01)
    array.set(q_prev_vwap_arr, 0, q_prev_vwap01), array.set(q_prev_vah_arr, 0, q_prev_vah01), array.set(q_prev_val_arr, 0, q_prev_val01)
    array.set(q_vwap_arr, 1, q_vwap02), array.set(q_vah_arr, 1, q_vah02), array.set(q_val_arr, 1, q_val02)
    array.set(q_prev_vwap_arr, 1, q_prev_vwap02), array.set(q_prev_vah_arr, 1, q_prev_vah02), array.set(q_prev_val_arr, 1, q_prev_val02)
    array.set(q_vwap_arr, 2, q_vwap03), array.set(q_vah_arr, 2, q_vah03), array.set(q_val_arr, 2, q_val03)
    array.set(q_prev_vwap_arr, 2, q_prev_vwap03), array.set(q_prev_vah_arr, 2, q_prev_vah03), array.set(q_prev_val_arr, 2, q_prev_val03)
    array.set(q_vwap_arr, 3, q_vwap04), array.set(q_vah_arr, 3, q_vah04), array.set(q_val_arr, 3, q_val04)
    array.set(q_prev_vwap_arr, 3, q_prev_vwap04), array.set(q_prev_vah_arr, 3, q_prev_vah04), array.set(q_prev_val_arr, 3, q_prev_val04)
    array.set(q_vwap_arr, 4, q_vwap05), array.set(q_vah_arr, 4, q_vah05), array.set(q_val_arr, 4, q_val05)
    array.set(q_prev_vwap_arr, 4, q_prev_vwap05), array.set(q_prev_vah_arr, 4, q_prev_vah05), array.set(q_prev_val_arr, 4, q_prev_val05)
    array.set(q_vwap_arr, 5, q_vwap06), array.set(q_vah_arr, 5, q_vah06), array.set(q_val_arr, 5, q_val06)
    array.set(q_prev_vwap_arr, 5, q_prev_vwap06), array.set(q_prev_vah_arr, 5, q_prev_vah06), array.set(q_prev_val_arr, 5, q_prev_val06)
    array.set(q_vwap_arr, 6, q_vwap07), array.set(q_vah_arr, 6, q_vah07), array.set(q_val_arr, 6, q_val07)
    array.set(q_prev_vwap_arr, 6, q_prev_vwap07), array.set(q_prev_vah_arr, 6, q_prev_vah07), array.set(q_prev_val_arr, 6, q_prev_val07)
    array.set(q_vwap_arr, 7, q_vwap08), array.set(q_vah_arr, 7, q_vah08), array.set(q_val_arr, 7, q_val08)
    array.set(q_prev_vwap_arr, 7, q_prev_vwap08), array.set(q_prev_vah_arr, 7, q_prev_vah08), array.set(q_prev_val_arr, 7, q_prev_val08)
    array.set(q_vwap_arr, 8, q_vwap09), array.set(q_vah_arr, 8, q_vah09), array.set(q_val_arr, 8, q_val09)
    array.set(q_prev_vwap_arr, 8, q_prev_vwap09), array.set(q_prev_vah_arr, 8, q_prev_vah09), array.set(q_prev_val_arr, 8, q_prev_val09)
    array.set(q_vwap_arr, 9, q_vwap10), array.set(q_vah_arr, 9, q_vah10), array.set(q_val_arr, 9, q_val10)
    array.set(q_prev_vwap_arr, 9, q_prev_vwap10), array.set(q_prev_vah_arr, 9, q_prev_vah10), array.set(q_prev_val_arr, 9, q_prev_val10)
    array.set(q_vwap_arr, 10, q_vwap11), array.set(q_vah_arr, 10, q_vah11), array.set(q_val_arr, 10, q_val11)
    array.set(q_prev_vwap_arr, 10, q_prev_vwap11), array.set(q_prev_vah_arr, 10, q_prev_vah11), array.set(q_prev_val_arr, 10, q_prev_val11)
    array.set(q_vwap_arr, 11, q_vwap12), array.set(q_vah_arr, 11, q_vah12), array.set(q_val_arr, 11, q_val12)
    array.set(q_prev_vwap_arr, 11, q_prev_vwap12), array.set(q_prev_vah_arr, 11, q_prev_vah12), array.set(q_prev_val_arr, 11, q_prev_val12)
    array.set(q_vwap_arr, 12, q_vwap13), array.set(q_vah_arr, 12, q_vah13), array.set(q_val_arr, 12, q_val13)
    array.set(q_prev_vwap_arr, 12, q_prev_vwap13), array.set(q_prev_vah_arr, 12, q_prev_vah13), array.set(q_prev_val_arr, 12, q_prev_val13)
    array.set(q_vwap_arr, 13, q_vwap14), array.set(q_vah_arr, 13, q_vah14), array.set(q_val_arr, 13, q_val14)
    array.set(q_prev_vwap_arr, 13, q_prev_vwap14), array.set(q_prev_vah_arr, 13, q_prev_vah14), array.set(q_prev_val_arr, 13, q_prev_val14)
    array.set(q_vwap_arr, 14, q_vwap15), array.set(q_vah_arr, 14, q_vah15), array.set(q_val_arr, 14, q_val15)
    array.set(q_prev_vwap_arr, 14, q_prev_vwap15), array.set(q_prev_vah_arr, 14, q_prev_vah15), array.set(q_prev_val_arr, 14, q_prev_val15)
    array.set(q_vwap_arr, 15, q_vwap16), array.set(q_vah_arr, 15, q_vah16), array.set(q_val_arr, 15, q_val16)
    array.set(q_prev_vwap_arr, 15, q_prev_vwap16), array.set(q_prev_vah_arr, 15, q_prev_vah16), array.set(q_prev_val_arr, 15, q_prev_val16)
    array.set(q_vwap_arr, 16, q_vwap17), array.set(q_vah_arr, 16, q_vah17), array.set(q_val_arr, 16, q_val17)
    array.set(q_prev_vwap_arr, 16, q_prev_vwap17), array.set(q_prev_vah_arr, 16, q_prev_vah17), array.set(q_prev_val_arr, 16, q_prev_val17)
    array.set(q_vwap_arr, 17, q_vwap18), array.set(q_vah_arr, 17, q_vah18), array.set(q_val_arr, 17, q_val18)
    array.set(q_prev_vwap_arr, 17, q_prev_vwap18), array.set(q_prev_vah_arr, 17, q_prev_vah18), array.set(q_prev_val_arr, 17, q_prev_val18)
    array.set(q_vwap_arr, 18, q_vwap19), array.set(q_vah_arr, 18, q_vah19), array.set(q_val_arr, 18, q_val19)
    array.set(q_prev_vwap_arr, 18, q_prev_vwap19), array.set(q_prev_vah_arr, 18, q_prev_vah19), array.set(q_prev_val_arr, 18, q_prev_val19)
    array.set(q_vwap_arr, 19, q_vwap20), array.set(q_vah_arr, 19, q_vah20), array.set(q_val_arr, 19, q_val20)
    array.set(q_prev_vwap_arr, 19, q_prev_vwap20), array.set(q_prev_vah_arr, 19, q_prev_vah20), array.set(q_prev_val_arr, 19, q_prev_val20)
    array.set(q_vwap_arr, 20, q_vwap21), array.set(q_vah_arr, 20, q_vah21), array.set(q_val_arr, 20, q_val21)
    array.set(q_prev_vwap_arr, 20, q_prev_vwap21), array.set(q_prev_vah_arr, 20, q_prev_vah21), array.set(q_prev_val_arr, 20, q_prev_val21)
    array.set(q_vwap_arr, 21, q_vwap22), array.set(q_vah_arr, 21, q_vah22), array.set(q_val_arr, 21, q_val22)
    array.set(q_prev_vwap_arr, 21, q_prev_vwap22), array.set(q_prev_vah_arr, 21, q_prev_vah22), array.set(q_prev_val_arr, 21, q_prev_val22)
    array.set(q_vwap_arr, 22, q_vwap23), array.set(q_vah_arr, 22, q_vah23), array.set(q_val_arr, 22, q_val23)
    array.set(q_prev_vwap_arr, 22, q_prev_vwap23), array.set(q_prev_vah_arr, 22, q_prev_vah23), array.set(q_prev_val_arr, 22, q_prev_val23)
    array.set(q_vwap_arr, 23, q_vwap24), array.set(q_vah_arr, 23, q_vah24), array.set(q_val_arr, 23, q_val24)
    array.set(q_prev_vwap_arr, 23, q_prev_vwap24), array.set(q_prev_vah_arr, 23, q_prev_vah24), array.set(q_prev_val_arr, 23, q_prev_val24)
    array.set(q_vwap_arr, 24, q_vwap25), array.set(q_vah_arr, 24, q_vah25), array.set(q_val_arr, 24, q_val25)
    array.set(q_prev_vwap_arr, 24, q_prev_vwap25), array.set(q_prev_vah_arr, 24, q_prev_vah25), array.set(q_prev_val_arr, 24, q_prev_val25)
    array.set(q_vwap_arr, 25, q_vwap26), array.set(q_vah_arr, 25, q_vah26), array.set(q_val_arr, 25, q_val26)
    array.set(q_prev_vwap_arr, 25, q_prev_vwap26), array.set(q_prev_vah_arr, 25, q_prev_vah26), array.set(q_prev_val_arr, 25, q_prev_val26)
    array.set(q_vwap_arr, 26, q_vwap27), array.set(q_vah_arr, 26, q_vah27), array.set(q_val_arr, 26, q_val27)
    array.set(q_prev_vwap_arr, 26, q_prev_vwap27), array.set(q_prev_vah_arr, 26, q_prev_vah27), array.set(q_prev_val_arr, 26, q_prev_val27)
    array.set(q_vwap_arr, 27, q_vwap28), array.set(q_vah_arr, 27, q_vah28), array.set(q_val_arr, 27, q_val28)
    array.set(q_prev_vwap_arr, 27, q_prev_vwap28), array.set(q_prev_vah_arr, 27, q_prev_vah28), array.set(q_prev_val_arr, 27, q_prev_val28)
    array.set(q_vwap_arr, 28, q_vwap29), array.set(q_vah_arr, 28, q_vah29), array.set(q_val_arr, 28, q_val29)
    array.set(q_prev_vwap_arr, 28, q_prev_vwap29), array.set(q_prev_vah_arr, 28, q_prev_vah29), array.set(q_prev_val_arr, 28, q_prev_val29)
    array.set(q_vwap_arr, 29, q_vwap30), array.set(q_vah_arr, 29, q_vah30), array.set(q_val_arr, 29, q_val30)
    array.set(q_prev_vwap_arr, 29, q_prev_vwap30), array.set(q_prev_vah_arr, 29, q_prev_vah30), array.set(q_prev_val_arr, 29, q_prev_val30)
    array.set(q_vwap_arr, 30, q_vwap31), array.set(q_vah_arr, 30, q_vah31), array.set(q_val_arr, 30, q_val31)
    array.set(q_prev_vwap_arr, 30, q_prev_vwap31), array.set(q_prev_vah_arr, 30, q_prev_vah31), array.set(q_prev_val_arr, 30, q_prev_val31)
    array.set(q_vwap_arr, 31, q_vwap32), array.set(q_vah_arr, 31, q_vah32), array.set(q_val_arr, 31, q_val32)
    array.set(q_prev_vwap_arr, 31, q_prev_vwap32), array.set(q_prev_vah_arr, 31, q_prev_vah32), array.set(q_prev_val_arr, 31, q_prev_val32)
    array.set(q_vwap_arr, 32, q_vwap33), array.set(q_vah_arr, 32, q_vah33), array.set(q_val_arr, 32, q_val33)
    array.set(q_prev_vwap_arr, 32, q_prev_vwap33), array.set(q_prev_vah_arr, 32, q_prev_vah33), array.set(q_prev_val_arr, 32, q_prev_val33)
    array.set(q_vwap_arr, 33, q_vwap34), array.set(q_vah_arr, 33, q_vah34), array.set(q_val_arr, 33, q_val34)
    array.set(q_prev_vwap_arr, 33, q_prev_vwap34), array.set(q_prev_vah_arr, 33, q_prev_vah34), array.set(q_prev_val_arr, 33, q_prev_val34)
    array.set(q_vwap_arr, 34, q_vwap35), array.set(q_vah_arr, 34, q_vah35), array.set(q_val_arr, 34, q_val35)
    array.set(q_prev_vwap_arr, 34, q_prev_vwap35), array.set(q_prev_vah_arr, 34, q_prev_vah35), array.set(q_prev_val_arr, 34, q_prev_val35)
    array.set(q_vwap_arr, 35, q_vwap36), array.set(q_vah_arr, 35, q_vah36), array.set(q_val_arr, 35, q_val36)
    array.set(q_prev_vwap_arr, 35, q_prev_vwap36), array.set(q_prev_vah_arr, 35, q_prev_vah36), array.set(q_prev_val_arr, 35, q_prev_val36)
    array.set(q_vwap_arr, 36, q_vwap37), array.set(q_vah_arr, 36, q_vah37), array.set(q_val_arr, 36, q_val37)
    array.set(q_prev_vwap_arr, 36, q_prev_vwap37), array.set(q_prev_vah_arr, 36, q_prev_vah37), array.set(q_prev_val_arr, 36, q_prev_val37)
    array.set(q_vwap_arr, 37, q_vwap38), array.set(q_vah_arr, 37, q_vah38), array.set(q_val_arr, 37, q_val38)
    array.set(q_prev_vwap_arr, 37, q_prev_vwap38), array.set(q_prev_vah_arr, 37, q_prev_vah38), array.set(q_prev_val_arr, 37, q_prev_val38)
    array.set(q_vwap_arr, 38, q_vwap39), array.set(q_vah_arr, 38, q_vah39), array.set(q_val_arr, 38, q_val39)
    array.set(q_prev_vwap_arr, 38, q_prev_vwap39), array.set(q_prev_vah_arr, 38, q_prev_vah39), array.set(q_prev_val_arr, 38, q_prev_val39)
    array.set(q_vwap_arr, 39, q_vwap40), array.set(q_vah_arr, 39, q_vah40), array.set(q_val_arr, 39, q_val40)
    array.set(q_prev_vwap_arr, 39, q_prev_vwap40), array.set(q_prev_vah_arr, 39, q_prev_vah40), array.set(q_prev_val_arr, 39, q_prev_val40)
    array.set(y_vwap_arr, 0, y_vwap01), array.set(y_vah_arr, 0, y_vah01), array.set(y_val_arr, 0, y_val01)
    array.set(y_prev_vwap_arr, 0, y_prev_vwap01), array.set(y_prev_vah_arr, 0, y_prev_vah01), array.set(y_prev_val_arr, 0, y_prev_val01)
    array.set(y_vwap_arr, 1, y_vwap02), array.set(y_vah_arr, 1, y_vah02), array.set(y_val_arr, 1, y_val02)
    array.set(y_prev_vwap_arr, 1, y_prev_vwap02), array.set(y_prev_vah_arr, 1, y_prev_vah02), array.set(y_prev_val_arr, 1, y_prev_val02)
    array.set(y_vwap_arr, 2, y_vwap03), array.set(y_vah_arr, 2, y_vah03), array.set(y_val_arr, 2, y_val03)
    array.set(y_prev_vwap_arr, 2, y_prev_vwap03), array.set(y_prev_vah_arr, 2, y_prev_vah03), array.set(y_prev_val_arr, 2, y_prev_val03)
    array.set(y_vwap_arr, 3, y_vwap04), array.set(y_vah_arr, 3, y_vah04), array.set(y_val_arr, 3, y_val04)
    array.set(y_prev_vwap_arr, 3, y_prev_vwap04), array.set(y_prev_vah_arr, 3, y_prev_vah04), array.set(y_prev_val_arr, 3, y_prev_val04)
    array.set(y_vwap_arr, 4, y_vwap05), array.set(y_vah_arr, 4, y_vah05), array.set(y_val_arr, 4, y_val05)
    array.set(y_prev_vwap_arr, 4, y_prev_vwap05), array.set(y_prev_vah_arr, 4, y_prev_vah05), array.set(y_prev_val_arr, 4, y_prev_val05)
    array.set(y_vwap_arr, 5, y_vwap06), array.set(y_vah_arr, 5, y_vah06), array.set(y_val_arr, 5, y_val06)
    array.set(y_prev_vwap_arr, 5, y_prev_vwap06), array.set(y_prev_vah_arr, 5, y_prev_vah06), array.set(y_prev_val_arr, 5, y_prev_val06)
    array.set(y_vwap_arr, 6, y_vwap07), array.set(y_vah_arr, 6, y_vah07), array.set(y_val_arr, 6, y_val07)
    array.set(y_prev_vwap_arr, 6, y_prev_vwap07), array.set(y_prev_vah_arr, 6, y_prev_vah07), array.set(y_prev_val_arr, 6, y_prev_val07)
    array.set(y_vwap_arr, 7, y_vwap08), array.set(y_vah_arr, 7, y_vah08), array.set(y_val_arr, 7, y_val08)
    array.set(y_prev_vwap_arr, 7, y_prev_vwap08), array.set(y_prev_vah_arr, 7, y_prev_vah08), array.set(y_prev_val_arr, 7, y_prev_val08)
    array.set(y_vwap_arr, 8, y_vwap09), array.set(y_vah_arr, 8, y_vah09), array.set(y_val_arr, 8, y_val09)
    array.set(y_prev_vwap_arr, 8, y_prev_vwap09), array.set(y_prev_vah_arr, 8, y_prev_vah09), array.set(y_prev_val_arr, 8, y_prev_val09)
    array.set(y_vwap_arr, 9, y_vwap10), array.set(y_vah_arr, 9, y_vah10), array.set(y_val_arr, 9, y_val10)
    array.set(y_prev_vwap_arr, 9, y_prev_vwap10), array.set(y_prev_vah_arr, 9, y_prev_vah10), array.set(y_prev_val_arr, 9, y_prev_val10)
    array.set(y_vwap_arr, 10, y_vwap11), array.set(y_vah_arr, 10, y_vah11), array.set(y_val_arr, 10, y_val11)
    array.set(y_prev_vwap_arr, 10, y_prev_vwap11), array.set(y_prev_vah_arr, 10, y_prev_vah11), array.set(y_prev_val_arr, 10, y_prev_val11)
    array.set(y_vwap_arr, 11, y_vwap12), array.set(y_vah_arr, 11, y_vah12), array.set(y_val_arr, 11, y_val12)
    array.set(y_prev_vwap_arr, 11, y_prev_vwap12), array.set(y_prev_vah_arr, 11, y_prev_vah12), array.set(y_prev_val_arr, 11, y_prev_val12)
    array.set(y_vwap_arr, 12, y_vwap13), array.set(y_vah_arr, 12, y_vah13), array.set(y_val_arr, 12, y_val13)
    array.set(y_prev_vwap_arr, 12, y_prev_vwap13), array.set(y_prev_vah_arr, 12, y_prev_vah13), array.set(y_prev_val_arr, 12, y_prev_val13)
    array.set(y_vwap_arr, 13, y_vwap14), array.set(y_vah_arr, 13, y_vah14), array.set(y_val_arr, 13, y_val14)
    array.set(y_prev_vwap_arr, 13, y_prev_vwap14), array.set(y_prev_vah_arr, 13, y_prev_vah14), array.set(y_prev_val_arr, 13, y_prev_val14)
    array.set(y_vwap_arr, 14, y_vwap15), array.set(y_vah_arr, 14, y_vah15), array.set(y_val_arr, 14, y_val15)
    array.set(y_prev_vwap_arr, 14, y_prev_vwap15), array.set(y_prev_vah_arr, 14, y_prev_vah15), array.set(y_prev_val_arr, 14, y_prev_val15)
    array.set(y_vwap_arr, 15, y_vwap16), array.set(y_vah_arr, 15, y_vah16), array.set(y_val_arr, 15, y_val16)
    array.set(y_prev_vwap_arr, 15, y_prev_vwap16), array.set(y_prev_vah_arr, 15, y_prev_vah16), array.set(y_prev_val_arr, 15, y_prev_val16)
    array.set(y_vwap_arr, 16, y_vwap17), array.set(y_vah_arr, 16, y_vah17), array.set(y_val_arr, 16, y_val17)
    array.set(y_prev_vwap_arr, 16, y_prev_vwap17), array.set(y_prev_vah_arr, 16, y_prev_vah17), array.set(y_prev_val_arr, 16, y_prev_val17)
    array.set(y_vwap_arr, 17, y_vwap18), array.set(y_vah_arr, 17, y_vah18), array.set(y_val_arr, 17, y_val18)
    array.set(y_prev_vwap_arr, 17, y_prev_vwap18), array.set(y_prev_vah_arr, 17, y_prev_vah18), array.set(y_prev_val_arr, 17, y_prev_val18)
    array.set(y_vwap_arr, 18, y_vwap19), array.set(y_vah_arr, 18, y_vah19), array.set(y_val_arr, 18, y_val19)
    array.set(y_prev_vwap_arr, 18, y_prev_vwap19), array.set(y_prev_vah_arr, 18, y_prev_vah19), array.set(y_prev_val_arr, 18, y_prev_val19)
    array.set(y_vwap_arr, 19, y_vwap20), array.set(y_vah_arr, 19, y_vah20), array.set(y_val_arr, 19, y_val20)
    array.set(y_prev_vwap_arr, 19, y_prev_vwap20), array.set(y_prev_vah_arr, 19, y_prev_vah20), array.set(y_prev_val_arr, 19, y_prev_val20)
    array.set(y_vwap_arr, 20, y_vwap21), array.set(y_vah_arr, 20, y_vah21), array.set(y_val_arr, 20, y_val21)
    array.set(y_prev_vwap_arr, 20, y_prev_vwap21), array.set(y_prev_vah_arr, 20, y_prev_vah21), array.set(y_prev_val_arr, 20, y_prev_val21)
    array.set(y_vwap_arr, 21, y_vwap22), array.set(y_vah_arr, 21, y_vah22), array.set(y_val_arr, 21, y_val22)
    array.set(y_prev_vwap_arr, 21, y_prev_vwap22), array.set(y_prev_vah_arr, 21, y_prev_vah22), array.set(y_prev_val_arr, 21, y_prev_val22)
    array.set(y_vwap_arr, 22, y_vwap23), array.set(y_vah_arr, 22, y_vah23), array.set(y_val_arr, 22, y_val23)
    array.set(y_prev_vwap_arr, 22, y_prev_vwap23), array.set(y_prev_vah_arr, 22, y_prev_vah23), array.set(y_prev_val_arr, 22, y_prev_val23)
    array.set(y_vwap_arr, 23, y_vwap24), array.set(y_vah_arr, 23, y_vah24), array.set(y_val_arr, 23, y_val24)
    array.set(y_prev_vwap_arr, 23, y_prev_vwap24), array.set(y_prev_vah_arr, 23, y_prev_vah24), array.set(y_prev_val_arr, 23, y_prev_val24)
    array.set(y_vwap_arr, 24, y_vwap25), array.set(y_vah_arr, 24, y_vah25), array.set(y_val_arr, 24, y_val25)
    array.set(y_prev_vwap_arr, 24, y_prev_vwap25), array.set(y_prev_vah_arr, 24, y_prev_vah25), array.set(y_prev_val_arr, 24, y_prev_val25)
    array.set(y_vwap_arr, 25, y_vwap26), array.set(y_vah_arr, 25, y_vah26), array.set(y_val_arr, 25, y_val26)
    array.set(y_prev_vwap_arr, 25, y_prev_vwap26), array.set(y_prev_vah_arr, 25, y_prev_vah26), array.set(y_prev_val_arr, 25, y_prev_val26)
    array.set(y_vwap_arr, 26, y_vwap27), array.set(y_vah_arr, 26, y_vah27), array.set(y_val_arr, 26, y_val27)
    array.set(y_prev_vwap_arr, 26, y_prev_vwap27), array.set(y_prev_vah_arr, 26, y_prev_vah27), array.set(y_prev_val_arr, 26, y_prev_val27)
    array.set(y_vwap_arr, 27, y_vwap28), array.set(y_vah_arr, 27, y_vah28), array.set(y_val_arr, 27, y_val28)
    array.set(y_prev_vwap_arr, 27, y_prev_vwap28), array.set(y_prev_vah_arr, 27, y_prev_vah28), array.set(y_prev_val_arr, 27, y_prev_val28)
    array.set(y_vwap_arr, 28, y_vwap29), array.set(y_vah_arr, 28, y_vah29), array.set(y_val_arr, 28, y_val29)
    array.set(y_prev_vwap_arr, 28, y_prev_vwap29), array.set(y_prev_vah_arr, 28, y_prev_vah29), array.set(y_prev_val_arr, 28, y_prev_val29)
    array.set(y_vwap_arr, 29, y_vwap30), array.set(y_vah_arr, 29, y_vah30), array.set(y_val_arr, 29, y_val30)
    array.set(y_prev_vwap_arr, 29, y_prev_vwap30), array.set(y_prev_vah_arr, 29, y_prev_vah30), array.set(y_prev_val_arr, 29, y_prev_val30)
    array.set(y_vwap_arr, 30, y_vwap31), array.set(y_vah_arr, 30, y_vah31), array.set(y_val_arr, 30, y_val31)
    array.set(y_prev_vwap_arr, 30, y_prev_vwap31), array.set(y_prev_vah_arr, 30, y_prev_vah31), array.set(y_prev_val_arr, 30, y_prev_val31)
    array.set(y_vwap_arr, 31, y_vwap32), array.set(y_vah_arr, 31, y_vah32), array.set(y_val_arr, 31, y_val32)
    array.set(y_prev_vwap_arr, 31, y_prev_vwap32), array.set(y_prev_vah_arr, 31, y_prev_vah32), array.set(y_prev_val_arr, 31, y_prev_val32)
    array.set(y_vwap_arr, 32, y_vwap33), array.set(y_vah_arr, 32, y_vah33), array.set(y_val_arr, 32, y_val33)
    array.set(y_prev_vwap_arr, 32, y_prev_vwap33), array.set(y_prev_vah_arr, 32, y_prev_vah33), array.set(y_prev_val_arr, 32, y_prev_val33)
    array.set(y_vwap_arr, 33, y_vwap34), array.set(y_vah_arr, 33, y_vah34), array.set(y_val_arr, 33, y_val34)
    array.set(y_prev_vwap_arr, 33, y_prev_vwap34), array.set(y_prev_vah_arr, 33, y_prev_vah34), array.set(y_prev_val_arr, 33, y_prev_val34)
    array.set(y_vwap_arr, 34, y_vwap35), array.set(y_vah_arr, 34, y_vah35), array.set(y_val_arr, 34, y_val35)
    array.set(y_prev_vwap_arr, 34, y_prev_vwap35), array.set(y_prev_vah_arr, 34, y_prev_vah35), array.set(y_prev_val_arr, 34, y_prev_val35)
    array.set(y_vwap_arr, 35, y_vwap36), array.set(y_vah_arr, 35, y_vah36), array.set(y_val_arr, 35, y_val36)
    array.set(y_prev_vwap_arr, 35, y_prev_vwap36), array.set(y_prev_vah_arr, 35, y_prev_vah36), array.set(y_prev_val_arr, 35, y_prev_val36)
    array.set(y_vwap_arr, 36, y_vwap37), array.set(y_vah_arr, 36, y_vah37), array.set(y_val_arr, 36, y_val37)
    array.set(y_prev_vwap_arr, 36, y_prev_vwap37), array.set(y_prev_vah_arr, 36, y_prev_vah37), array.set(y_prev_val_arr, 36, y_prev_val37)
    array.set(y_vwap_arr, 37, y_vwap38), array.set(y_vah_arr, 37, y_vah38), array.set(y_val_arr, 37, y_val38)
    array.set(y_prev_vwap_arr, 37, y_prev_vwap38), array.set(y_prev_vah_arr, 37, y_prev_vah38), array.set(y_prev_val_arr, 37, y_prev_val38)
    array.set(y_vwap_arr, 38, y_vwap39), array.set(y_vah_arr, 38, y_vah39), array.set(y_val_arr, 38, y_val39)
    array.set(y_prev_vwap_arr, 38, y_prev_vwap39), array.set(y_prev_vah_arr, 38, y_prev_vah39), array.set(y_prev_val_arr, 38, y_prev_val39)
    array.set(y_vwap_arr, 39, y_vwap40), array.set(y_vah_arr, 39, y_vah40), array.set(y_val_arr, 39, y_val40)
    array.set(y_prev_vwap_arr, 39, y_prev_vwap40), array.set(y_prev_vah_arr, 39, y_prev_vah40), array.set(y_prev_val_arr, 39, y_prev_val40)

if barstate.islast
    table.cell(dashboard, 0, 0, "TICKER", bgcolor=color_header_bg, text_color=color_text)
    table.cell(dashboard, 1, 0, "SCORE", bgcolor=color_header_bg, text_color=color_text)
    table.cell(dashboard, 2, 0, "PRICE",  bgcolor=color_header_bg, text_color=color_text)
    table.cell(dashboard, 3, 0, "ΔWVWAP", bgcolor=color_header_bg, text_color=color_text)
    table.cell(dashboard, 4, 0, "ΔMVWAP", bgcolor=color_header_bg, text_color=color_text)
    table.cell(dashboard, 5, 0, "ΔQVWAP", bgcolor=color_header_bg, text_color=color_text)
    table.cell(dashboard, 6, 0, "ΔYVWAP", bgcolor=color_header_bg, text_color=color_text)
    
    max_score = (w_weight + m_weight + q_weight + y_weight) * (1 + std_weight + prev_weight)

    // build arrays to store normalized scores and symbol indices
    var int[] sortedIndices = array.new_int(0)
    var float[] normScores = array.new_float(0)
    for i = 0 to maxSymbolsToShow - 1
        c_price = array.get(close_arr, i)
        ww  = array.get(w_vwap_arr, i)
        wa  = array.get(w_vah_arr, i)
        wl  = array.get(w_val_arr, i)
        wpw = array.get(w_prev_vwap_arr, i)
        wpa = array.get(w_prev_vah_arr, i)
        wpl = array.get(w_prev_val_arr, i)

        mw  = array.get(m_vwap_arr, i)
        ma  = array.get(m_vah_arr, i)
        ml  = array.get(m_val_arr, i)
        mpw = array.get(m_prev_vwap_arr, i)
        mpa = array.get(m_prev_vah_arr, i)
        mpl = array.get(m_prev_val_arr, i)

        qw  = array.get(q_vwap_arr, i)
        qa  = array.get(q_vah_arr, i)
        ql  = array.get(q_val_arr, i)
        qpw = array.get(q_prev_vwap_arr, i)
        qpa = array.get(q_prev_vah_arr, i)
        qpl = array.get(q_prev_val_arr, i)

        yw  = array.get(y_vwap_arr, i)
        ya  = array.get(y_vah_arr, i)
        yl  = array.get(y_val_arr, i)
        ypw = array.get(y_prev_vwap_arr, i)
        ypa = array.get(y_prev_vah_arr, i)
        ypl = array.get(y_prev_val_arr, i)

        w_score = calculate_period_score(c_price, ww, wa, wl, wpw, wpa, wpl, w_weight)
        m_score = calculate_period_score(c_price, mw, ma, ml, mpw, mpa, mpl, m_weight)
        q_score = calculate_period_score(c_price, qw, qa, ql, qpw, qpa, qpl, q_weight)
        y_score = calculate_period_score(c_price, yw, ya, yl, ypw, ypa, ypl, y_weight)
        total_score = w_score + m_score + q_score + y_score
        normalized_score = (total_score / max_score) * 100

        array.push(sortedIndices, i)
        array.push(normScores, normalized_score)

    // bubble sort the sortedIndices array based on normScores descending
    for i = 0 to array.size(sortedIndices) - 2
        for j = i + 1 to array.size(sortedIndices) - 1
            idx_i = array.get(sortedIndices, i)
            idx_j = array.get(sortedIndices, j)
            score_i = array.get(normScores, idx_i)
            score_j = array.get(normScores, idx_j)
            if score_j > score_i
                temp = array.get(sortedIndices, i)
                array.set(sortedIndices, i, array.get(sortedIndices, j))
                array.set(sortedIndices, j, temp)

    // now populate the table rows in sorted order (top scores first)
    for k = 0 to array.size(sortedIndices) - 1
        idx = array.get(sortedIndices, k)
        c_price = array.get(close_arr, idx)

        ww  = array.get(w_vwap_arr, idx)
        wa  = array.get(w_vah_arr, idx)
        wl  = array.get(w_val_arr, idx)
        wpw = array.get(w_prev_vwap_arr, idx)
        wpa = array.get(w_prev_vah_arr, idx)
        wpl = array.get(w_prev_val_arr, idx)

        mw  = array.get(m_vwap_arr, idx)
        ma  = array.get(m_vah_arr, idx)
        ml  = array.get(m_val_arr, idx)
        mpw = array.get(m_prev_vwap_arr, idx)
        mpa = array.get(m_prev_vah_arr, idx)
        mpl = array.get(m_prev_val_arr, idx)

        qw  = array.get(q_vwap_arr, idx)
        qa  = array.get(q_vah_arr, idx)
        ql  = array.get(q_val_arr, idx)
        qpw = array.get(q_prev_vwap_arr, idx)
        qpa = array.get(q_prev_vah_arr, idx)
        qpl = array.get(q_prev_val_arr, idx)

        yw  = array.get(y_vwap_arr, idx)
        ya  = array.get(y_vah_arr, idx)
        yl  = array.get(y_val_arr, idx)
        ypw = array.get(y_prev_vwap_arr, idx)
        ypa = array.get(y_prev_vah_arr, idx)
        ypl = array.get(y_prev_val_arr, idx)

        w_score = calculate_period_score(c_price, ww, wa, wl, wpw, wpa, wpl, w_weight)
        m_score = calculate_period_score(c_price, mw, ma, ml, mpw, mpa, mpl, m_weight)
        q_score = calculate_period_score(c_price, qw, qa, ql, qpw, qpa, qpl, q_weight)
        y_score = calculate_period_score(c_price, yw, ya, yl, ypw, ypa, ypl, y_weight)
        total_score = w_score + m_score + q_score + y_score
        normalized_score = (total_score / max_score) * 100

        w_pct = not na(ww) ? (c_price / ww - 1) * 100 : na
        m_pct = not na(mw) ? (c_price / mw - 1) * 100 : na
        q_pct = not na(qw) ? (c_price / qw - 1) * 100 : na
        y_pct = not na(yw) ? (c_price / yw - 1) * 100 : na

        rowIndex = k + 1
        sym_name = array.get(symbol_arr, idx)

        table.cell(dashboard, 0, rowIndex, sym_name, text_color=color.white)
        table.cell(dashboard, 1, rowIndex, str.tostring(normalized_score, "#.##"), bgcolor=get_color_for_value(normalized_score), text_color=color.white)
        table.cell(dashboard, 2, rowIndex, str.tostring(c_price, "#.####"), text_color=color.white)
        table.cell(dashboard, 3, rowIndex, str.tostring(w_pct, "#.##") + "%", bgcolor=get_color_for_value(w_pct), text_color=color.white)
        table.cell(dashboard, 4, rowIndex, str.tostring(m_pct, "#.##") + "%", bgcolor=get_color_for_value(m_pct), text_color=color.white)
        table.cell(dashboard, 5, rowIndex, str.tostring(q_pct, "#.##") + "%", bgcolor=get_color_for_value(q_pct), text_color=color.white)
        table.cell(dashboard, 6, rowIndex, str.tostring(y_pct, "#.##") + "%", bgcolor=get_color_for_value(y_pct), text_color=color.white)
